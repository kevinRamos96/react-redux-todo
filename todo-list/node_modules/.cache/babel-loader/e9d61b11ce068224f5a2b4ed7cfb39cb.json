{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"/Users/cait02/Desktop/Begin/React/todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cait02/Desktop/Begin/React/todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState}from'react';import TodoSubList from'./todosublist';import ShowListItem from'./showListItems';import CreateTask from'./createTask';import{useDispatch,useSelector}from\"react-redux\";import{toogleShow}from\"../redux/actions\";import\"../App.css\";var TodoList=function TodoList(props){//set up state from app.js\nvar dispatch=useDispatch();var selec=useSelector(function(state){return state;});console.log(\"using selector\",selec);console.log(\"using selector len\",Object.keys(selec));var result=props.map(function(input){var holder={task:input.task,status:false};return holder;});var _useState=useState(props),_useState2=_slicedToArray(_useState,2),butState=_useState2[0],setBut=_useState2[1];console.log('result',result);console.log('butState',butState);//Lets return a div with ul with what is inside the state\nfunction setter(input){var vari=butState.map(function(finder){if(finder.task==input){return _objectSpread(_objectSpread({},finder),{},{show:!finder.show});}return finder;});console.log(\"vari\",vari);return vari;}function showSteps(input){console.log(\"getting input\",input);var newButS=setter(input);console.log('before click',butState);console.log('input',butState.first);setBut(newButS);console.log('after click',butState);}var content=/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CreateTask,{}),/*#__PURE__*/_jsx(ShowListItem,{})]})})});return content;};export default TodoList;","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js"],"names":["React","Component","useState","TodoSubList","ShowListItem","CreateTask","useDispatch","useSelector","toogleShow","TodoList","props","dispatch","selec","state","console","log","Object","keys","result","map","input","holder","task","status","butState","setBut","setter","vari","finder","show","showSteps","newButS","first","content"],"mappings":"2ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,MAAO,YAAP,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACxB;AAEA,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,KAAK,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CACAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BH,KAA9B,EACAE,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCC,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAlC,EAEA,GAAMM,CAAAA,MAAM,CAAGR,KAAK,CAACS,GAAN,CAAU,SAAAC,KAAK,CAAI,CAC9B,GAAIC,CAAAA,MAAM,CAAG,CAAEC,IAAI,CAAEF,KAAK,CAACE,IAAd,CAAoBC,MAAM,CAAE,KAA5B,CAAb,CACA,MAAOF,CAAAA,MAAP,CACH,CAHc,CAAf,CARwB,cAYGnB,QAAQ,CAACQ,KAAD,CAZX,wCAYjBc,QAZiB,eAYPC,MAZO,eAaxBX,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBG,MAAtB,EACAJ,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBS,QAAxB,EAEA;AAIA,QAASE,CAAAA,MAAT,CAAgBN,KAAhB,CAAuB,CACnB,GAAIO,CAAAA,IAAI,CAAGH,QAAQ,CAACL,GAAT,CAAa,SAAAS,MAAM,CAAI,CAC9B,GAAIA,MAAM,CAACN,IAAP,EAAeF,KAAnB,CAA0B,CACtB,sCAAYQ,MAAZ,MAAoBC,IAAI,CAAE,CAACD,MAAM,CAACC,IAAlC,GACH,CACD,MAAOD,CAAAA,MAAP,CACH,CALU,CAAX,CAMAd,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBY,IAApB,EACA,MAAOA,CAAAA,IAAP,CACH,CACD,QAASG,CAAAA,SAAT,CAAmBV,KAAnB,CAA0B,CACtBN,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BK,KAA7B,EACA,GAAIW,CAAAA,OAAO,CAAGL,MAAM,CAACN,KAAD,CAApB,CACAN,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BS,QAA5B,EACAV,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBS,QAAQ,CAACQ,KAA9B,EACAP,MAAM,CAACM,OAAD,CAAN,CACAjB,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2BS,QAA3B,EAEH,CAWD,GAAIS,CAAAA,OAAO,cACP,kCACI,iCACI,oCACI,KAAC,UAAD,IADJ,cAEI,KAAC,YAAD,IAFJ,GADJ,EADJ,EADJ,CAYA,MAAOA,CAAAA,OAAP,CACH,CA9DD,CAiEA,cAAexB,CAAAA,QAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nimport \"../App.css\"\n\n\nconst TodoList = (props) => {\n    //set up state from app.js\n\n    const dispatch = useDispatch()\n    const selec = useSelector(state => state)\n    console.log(\"using selector\", selec)\n    console.log(\"using selector len\", Object.keys(selec))\n\n    const result = props.map(input => {\n        let holder = { task: input.task, status: false }\n        return holder\n    })\n    const [butState, setBut] = useState(props)\n    console.log('result', result)\n    console.log('butState', butState)\n\n    //Lets return a div with ul with what is inside the state\n\n\n\n    function setter(input) {\n        let vari = butState.map(finder => {\n            if (finder.task == input) {\n                return { ...finder, show: !finder.show }\n            }\n            return finder\n        })\n        console.log(\"vari\", vari)\n        return vari\n    }\n    function showSteps(input) {\n        console.log(\"getting input\", input)\n        let newButS = setter(input)\n        console.log('before click', butState)\n        console.log('input', butState.first)\n        setBut(newButS)\n        console.log('after click', butState)\n\n    }\n\n\n\n\n\n\n\n\n\n\n    let content = (\n        <div>\n            <ul>\n                <div>\n                    <CreateTask />\n                    <ShowListItem />\n                </div>\n\n\n            </ul>\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}