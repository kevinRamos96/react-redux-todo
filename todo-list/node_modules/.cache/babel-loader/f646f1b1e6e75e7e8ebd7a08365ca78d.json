{"ast":null,"code":"import { ADD_TODO, SHOW, COMPLETED, ADD_TODO_SLAVE, STEP_COMPLETED, STEP_UNDO, POST_TASK, POST_TASK_SUCC, ADD_STATE } from \"./actionTypes\";\nimport axios from \"axios\";\nexport const addTodo = (content, date) => ({\n  type: ADD_TODO,\n  payload: {\n    task: content,\n    dateB: date,\n    dateE: \"1/1/1\",\n    completed: 0,\n    show: false,\n    steps: {}\n  }\n});\nexport const postTask = (content, date) => (dispatch, getState) => {\n  const tasks = {\n    task: content,\n    dateB: date,\n    dateE: \"1/1/1\",\n    completed: 0,\n    show: false,\n    steps: {}\n  };\n  console.log(\"thunk to post\", tasks);\n  axios.post(\"http://localhost:8080/api/\", tasks).then(res => {\n    console.log(\"res\", res);\n    console.log(\"resdata\", res.data);\n  });\n};\nexport const getStateFromApi = input => ({\n  type: ADD_STATE,\n  paload: {}\n});\nexport const getTask = (content, date) => (dispatch, getState) => {\n  //const task\n  axios.get(\"http://localhost:8080/api/\").then(res => {\n    console.log(\"get res\", res.data) / onsole.log(\"get res.data._id\", res.data._id); //getStateFromApi(res.data)\n  } //console.log(\" get res \" res.data)\n  );\n};\nexport const postTaskSteps = (content, date, contentSteps) => (dispatch, getState) => {\n  const tasks = {\n    task: content,\n    dateB: date,\n    dateE: \"1/1/1\",\n    completed: 0,\n    show: false,\n    steps: contentSteps\n  };\n  console.log(\"thunk to post\", tasks);\n  axios.post(\"http://localhost:8080/api/\", tasks).then(res => {\n    console.log(\"res\", res);\n    console.log(\"resdata\", res.data);\n  });\n}; //addTodo slave to create steps from addTodo\n\nexport const addTodoSlave = (content, contentSteps, date) => ({\n  type: ADD_TODO_SLAVE,\n  payload: {\n    task: content,\n    dateB: date,\n    dateE: \"1/1/1\",\n    completed: 0,\n    show: false,\n    steps: contentSteps\n  }\n});\nexport const toogleShow = item => ({\n  type: SHOW,\n  payload: item\n});\nexport const stepCompleted = (item, itemStep, itemCompleted) => ({\n  type: STEP_COMPLETED,\n  payload: item,\n  stepFinder: itemStep,\n  //temp properity folder for the substep index\n  newCompleted: itemCompleted\n});\nexport const stepUndo = (item, itemStep, itemCompleted) => ({\n  type: STEP_UNDO,\n  payload: item,\n  stepFinder: itemStep,\n  newCompleted: itemCompleted\n});","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actions.js"],"names":["ADD_TODO","SHOW","COMPLETED","ADD_TODO_SLAVE","STEP_COMPLETED","STEP_UNDO","POST_TASK","POST_TASK_SUCC","ADD_STATE","axios","addTodo","content","date","type","payload","task","dateB","dateE","completed","show","steps","postTask","dispatch","getState","tasks","console","log","post","then","res","data","getStateFromApi","input","paload","getTask","get","onsole","_id","postTaskSteps","contentSteps","addTodoSlave","toogleShow","item","stepCompleted","itemStep","itemCompleted","stepFinder","newCompleted","stepUndo"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,cAApC,EAAoDC,cAApD,EAAoEC,SAApE,EAA+EC,SAA/E,EAA0FC,cAA1F,EAA0GC,SAA1G,QAA2H,eAA3H;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,OAAD,EAAUC,IAAV,MAAoB;AACvCC,EAAAA,IAAI,EAAEb,QADiC;AAEvCc,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEJ,OADD;AAELK,IAAAA,KAAK,EAAEJ,IAFF;AAGLK,IAAAA,KAAK,EAAE,OAHF;AAILC,IAAAA,SAAS,EAAE,CAJN;AAKLC,IAAAA,IAAI,EAAE,KALD;AAMLC,IAAAA,KAAK,EAAE;AANF;AAF8B,CAApB,CAAhB;AAeP,OAAO,MAAMC,QAAQ,GAAG,CAACV,OAAD,EAAUC,IAAV,KAAmB,CAACU,QAAD,EAAWC,QAAX,KAAwB;AAC/D,QAAMC,KAAK,GAAG;AACVT,IAAAA,IAAI,EAAEJ,OADI;AAEVK,IAAAA,KAAK,EAAEJ,IAFG;AAGVK,IAAAA,KAAK,EAAE,OAHG;AAIVC,IAAAA,SAAS,EAAE,CAJD;AAKVC,IAAAA,IAAI,EAAE,KALI;AAMVC,IAAAA,KAAK,EAAE;AANG,GAAd;AASAK,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACAf,EAAAA,KAAK,CAACkB,IAAN,CAAW,4BAAX,EAAyCH,KAAzC,EACKI,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,GAAG,CAACC,IAA3B;AACH,GAJL;AAMH,CAjBM;AAoBP,OAAO,MAAMC,eAAe,GAAIC,KAAD,KAAY;AACvCnB,EAAAA,IAAI,EAAEL,SADiC;AAEvCyB,EAAAA,MAAM,EAAE;AAF+B,CAAZ,CAAxB;AAMP,OAAO,MAAMC,OAAO,GAAG,CAACvB,OAAD,EAAUC,IAAV,KAAmB,CAACU,QAAD,EAAWC,QAAX,KAAwB;AAC9D;AACAd,EAAAA,KAAK,CAAC0B,GAAN,CAAU,4BAAV,EACKP,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,GAAG,CAACC,IAA3B,IACMM,MAAM,CAACV,GAAP,CAAW,kBAAX,EAA+BG,GAAG,CAACC,IAAJ,CAASO,GAAxC,CADN,CADS,CAGT;AACH,GALL,CAKK;AALL;AAQH,CAVM;AAWP,OAAO,MAAMC,aAAa,GAAG,CAAC3B,OAAD,EAAUC,IAAV,EAAgB2B,YAAhB,KAAiC,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAClF,QAAMC,KAAK,GAAG;AACVT,IAAAA,IAAI,EAAEJ,OADI;AAEVK,IAAAA,KAAK,EAAEJ,IAFG;AAGVK,IAAAA,KAAK,EAAE,OAHG;AAIVC,IAAAA,SAAS,EAAE,CAJD;AAKVC,IAAAA,IAAI,EAAE,KALI;AAMVC,IAAAA,KAAK,EAAEmB;AANG,GAAd;AAQAd,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACAf,EAAAA,KAAK,CAACkB,IAAN,CAAW,4BAAX,EAAyCH,KAAzC,EACKI,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,GAAG,CAACC,IAA3B;AACH,GAJL;AAMH,CAhBM,C,CAiBP;;AACA,OAAO,MAAMU,YAAY,GAAG,CAAC7B,OAAD,EAAU4B,YAAV,EAAwB3B,IAAxB,MAAkC;AAC1DC,EAAAA,IAAI,EAAEV,cADoD;AAE1DW,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEJ,OADD;AAELK,IAAAA,KAAK,EAAEJ,IAFF;AAGLK,IAAAA,KAAK,EAAE,OAHF;AAILC,IAAAA,SAAS,EAAE,CAJN;AAKLC,IAAAA,IAAI,EAAE,KALD;AAMLC,IAAAA,KAAK,EAAEmB;AANF;AAFiD,CAAlC,CAArB;AAYP,OAAO,MAAME,UAAU,GAAGC,IAAI,KAAK;AAC/B7B,EAAAA,IAAI,EAAEZ,IADyB;AAE/Ba,EAAAA,OAAO,EAAE4B;AAFsB,CAAL,CAAvB;AAKP,OAAO,MAAMC,aAAa,GAAG,CAACD,IAAD,EAAOE,QAAP,EAAiBC,aAAjB,MAAoC;AAC7DhC,EAAAA,IAAI,EAAET,cADuD;AAE7DU,EAAAA,OAAO,EAAE4B,IAFoD;AAG7DI,EAAAA,UAAU,EAAEF,QAHiD;AAGvC;AACtBG,EAAAA,YAAY,EAAEF;AAJ+C,CAApC,CAAtB;AAOP,OAAO,MAAMG,QAAQ,GAAG,CAACN,IAAD,EAAOE,QAAP,EAAiBC,aAAjB,MAAoC;AACxDhC,EAAAA,IAAI,EAAER,SADkD;AAExDS,EAAAA,OAAO,EAAE4B,IAF+C;AAGxDI,EAAAA,UAAU,EAAEF,QAH4C;AAIxDG,EAAAA,YAAY,EAAEF;AAJ0C,CAApC,CAAjB","sourcesContent":["import { ADD_TODO, SHOW, COMPLETED, ADD_TODO_SLAVE, STEP_COMPLETED, STEP_UNDO, POST_TASK, POST_TASK_SUCC, ADD_STATE } from \"./actionTypes\"\nimport axios from \"axios\"\nexport const addTodo = (content, date) => ({\n    type: ADD_TODO,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n\n    }\n\n})\n\nexport const postTask = (content, date) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://localhost:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", res)\n            console.log(\"resdata\", res.data)\n        })\n\n}\n\n\nexport const getStateFromApi = (input) => ({\n    type: ADD_STATE,\n    paload: {\n\n    }\n})\nexport const getTask = (content, date) => (dispatch, getState) => {\n    //const task\n    axios.get(\"http://localhost:8080/api/\")\n        .then(res => {\n            console.log(\"get res\", res.data)\n                / onsole.log(\"get res.data._id\", res.data._id)\n            //getStateFromApi(res.data)\n        }//console.log(\" get res \" res.data)\n        )\n\n}\nexport const postTaskSteps = (content, date, contentSteps) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://localhost:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", res)\n            console.log(\"resdata\", res.data)\n        })\n\n}\n//addTodo slave to create steps from addTodo\nexport const addTodoSlave = (content, contentSteps, date) => ({\n    type: ADD_TODO_SLAVE,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n})\n\nexport const toogleShow = item => ({\n    type: SHOW,\n    payload: item\n})\n\nexport const stepCompleted = (item, itemStep, itemCompleted) => ({\n    type: STEP_COMPLETED,\n    payload: item,\n    stepFinder: itemStep, //temp properity folder for the substep index\n    newCompleted: itemCompleted\n})\n\nexport const stepUndo = (item, itemStep, itemCompleted) => ({\n    type: STEP_UNDO,\n    payload: item,\n    stepFinder: itemStep,\n    newCompleted: itemCompleted\n})\n"]},"metadata":{},"sourceType":"module"}