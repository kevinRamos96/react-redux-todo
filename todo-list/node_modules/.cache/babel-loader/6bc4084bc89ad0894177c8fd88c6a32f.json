{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"/Users/cait02/Desktop/Begin/React/todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/cait02/Desktop/Begin/React/todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/cait02/Desktop/Begin/React/todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Component,useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{addTodo,addTodoSlave,getTask,postTaskSteps}from\"../redux/actions\";import{postTask}from\"../redux/actions\";var CreateTask=function CreateTask(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),subT=_useState4[0],setSubT=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),subList=_useState6[0],setSubList=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),butState=_useState8[0],setButState=_useState8[1];var dispatch=useDispatch();var testState=useSelector(function(state){return state;});console.log(\"testState\",testState);var date=new Date();var taskDate=date.getMonth()+1+\"/\"+date.getDate()+\"/\"+date.getFullYear();var formTask=function formTask(e){console.log(\"target\",e.target.value);setTask(e.target.value);console.log(\"target\",task);};var formSubt=function formSubt(e){setSubT(e.target.value);console.log(\"subT\",subT);};//Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\nvar addSubTask=function addSubTask(){if(subList===null){setSubList(_defineProperty({},subT,{step:subT,dateBS:taskDate,completedS:0}));console.log(\"if addSubTask\",subList);setSubT(\"\");console.log(\"ifsubt\",subT);}else{console.log(\"else\",subT);console.log(\"else addSubTask\",subList);setSubList(_objectSpread(_objectSpread({},subList),{},_defineProperty({},subT,{step:subT,dateBS:taskDate,completedS:0})));console.log(\"subList\",subList);setSubT(\"\");}};var dispatchAddTodo=function dispatchAddTodo(){dispatch(addTodo(task,taskDate));dispatch(postTask(task,taskDate));dispatch(getTask());};//Set state for task and subList to null\nvar dispatchAddTodoSlave=function dispatchAddTodoSlave(){dispatch(addTodoSlave(task,subList,taskDate));dispatch(postTaskSteps(task,taskDate,subList));setTask(\"\");setSubList(\"\");setButState(false);};var butSet=function butSet(){setButState(!butState);};//When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\nvar deleteSubTask=function deleteSubTask(input){console.log(\"deleting step\",input);var newSubList=Object.keys(subList).reduce(function(object,helper){if(subList[helper]!==input){console.log(\"sublist\",subList[helper]);object[helper]=subList[helper];}return object;},{});console.log(\"newSubList\",newSubList);setSubList(newSubList);console.log(\"subListFromDelete\",subList);};var container=/*#__PURE__*/_jsxs(\"div\",{children:[!butState?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:task,onChange:function onChange(e){return formTask(e);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return dispatchAddTodo();},children:\"Add Task\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return butSet();},children:\"CreateSubTask\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:task,onChange:function onChange(e){return formTask(e);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return dispatchAddTodoSlave();},children:\"Add Task\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return butSet();},children:\"DeleteAllSubTask\"}),subList===null?/*#__PURE__*/_jsxs(\"div\",{children:[console.log(\"inside true sublist\"),/*#__PURE__*/_jsx(\"input\",{value:subT,onChange:function onChange(e){return formSubt(e);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return addSubTask();},children:\"submit step\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[Object.keys(subList).map(function(input){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{readOnly:true,value:subList[input].step}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return deleteSubTask(subList[input]);},children:\"Delete Step\"})]});}),/*#__PURE__*/_jsx(\"input\",{value:subT,onChange:function onChange(e){return formSubt(e);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return addSubTask();},children:\"submit step\"})]})]}),/*#__PURE__*/_jsx(\"br\",{})]});return container;};export default CreateTask;","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js"],"names":["Component","useState","useEffect","useDispatch","useSelector","addTodo","addTodoSlave","getTask","postTaskSteps","postTask","CreateTask","task","setTask","subT","setSubT","subList","setSubList","butState","setButState","dispatch","testState","state","console","log","date","Date","taskDate","getMonth","getDate","getFullYear","formTask","e","target","value","formSubt","addSubTask","step","dateBS","completedS","dispatchAddTodo","dispatchAddTodoSlave","butSet","deleteSubTask","input","newSubList","Object","keys","reduce","object","helper","container","map"],"mappings":"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","sourcesContent":["import { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave, getTask, postTaskSteps } from \"../redux/actions\"\nimport { postTask } from \"../redux/actions\";\n\nconst CreateTask = () => {\n    const [task, setTask] = useState(null)\n    const [subT, setSubT] = useState(null)\n    const [subList, setSubList] = useState(\"\")\n    const [butState, setButState] = useState(false)\n    const dispatch = useDispatch()\n    const testState = useSelector(state => state)\n    console.log(\"testState\", testState)\n    const date = new Date()\n    const taskDate = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n\n    //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n    const addSubTask = () => {\n\n        if (subList === null) {\n            setSubList({\n                [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"if addSubTask\", subList)\n            setSubT(\"\")\n            console.log(\"ifsubt\", subT)\n\n        }\n\n        else {\n            console.log(\"else\", subT)\n            console.log(\"else addSubTask\", subList)\n            setSubList({\n                ...subList, [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"subList\", subList)\n            setSubT(\"\")\n\n        }\n\n\n\n\n    }\n\n    const dispatchAddTodo = () => {\n        dispatch(addTodo(task, taskDate))\n        dispatch(postTask(task, taskDate))\n        dispatch(getTask())\n    }\n    //Set state for task and subList to null\n    const dispatchAddTodoSlave = () => {\n        dispatch(addTodoSlave(task, subList, taskDate))\n        dispatch(postTaskSteps(task, taskDate, subList))\n        setTask(\"\");\n        setSubList(\"\");\n        setButState(false)\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n    //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n    const deleteSubTask = (input) => {\n        console.log(\"deleting step\", input)\n        const newSubList = Object.keys(subList).reduce((object, helper) => {\n            if (subList[helper] !== input) {\n                console.log(\"sublist\", subList[helper])\n                object[helper] = subList[helper]\n            }\n            return object\n        }, {}\n        )\n        console.log(\"newSubList\", newSubList)\n        setSubList(newSubList)\n        console.log(\"subListFromDelete\", subList)\n    }\n\n    let container = (<div>\n        {!butState ? <div>\n            <input value={task} onChange={(e) => formTask(e)}></input>\n            <button type='submit' onClick={() => dispatchAddTodo()}>Add Task</button>\n            <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n        </div>\n            :\n            <div>\n                <input value={task} onChange={(e) => formTask(e)}></input>\n                <button type='submit' onClick={() => dispatchAddTodoSlave()}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                {subList === null ?\n                    <div>\n                        {console.log(\"inside true sublist\")}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                    :\n                    <div>\n                        {Object.keys(subList).map(input => <div>\n                            <input readOnly value={subList[input].step}></input>\n                            <button type=\"submit\" onClick={() => deleteSubTask(subList[input])}>Delete Step</button>\n                        </div>)}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                }\n            </div>}\n\n\n        <br></br>\n\n    </div >)\n\n    return container\n\n\n}\n\nexport default CreateTask"]},"metadata":{},"sourceType":"module"}