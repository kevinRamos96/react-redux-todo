{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, addTodoSlave } from \"../redux/actions\";\n\nconst CreateTask = () => {\n  _s();\n\n  const [task, setTask] = useState(null);\n  const [subT, setSubT] = useState(null);\n  const [subList, setSubList] = useState(\"\");\n  const [butState, setButState] = useState(false);\n  const dispatch = useDispatch();\n\n  const formTask = e => {\n    console.log(\"target\", e.target.value);\n    setTask(e.target.value);\n    console.log(\"target\", task);\n  };\n\n  const formSubt = e => {\n    setSubT(e.target.value);\n    console.log(\"subT\", subT);\n  }; //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n\n\n  const addSubTask = () => {\n    if (subList === null) {\n      setSubList({\n        [subT]: {\n          step: subT,\n          completed: 0\n        }\n      });\n      console.log(\"if addSubTask\", subList);\n      setSubT(\"\");\n      console.log(\"ifsubt\", subT);\n    } else {\n      console.log(\"else\", subT);\n      console.log(\"else addSubTask\", subList);\n      setSubList({ ...subList,\n        [subT]: {\n          step: subT,\n          completed: 0\n        }\n      });\n      console.log(\"subList\", subList);\n      setSubT(\"\");\n    }\n  }; //Set state for task and subList to null\n\n\n  const dispatchAddTodoSlave = () => {\n    dispatch(addTodoSlave(task, subList));\n    setTask(\"\");\n    setSubList(\"\");\n    setButState(false);\n  };\n\n  const butSet = () => {\n    setButState(!butState);\n  }; //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n\n\n  const deleteSubTask = input => {\n    console.log(\"deleting step\", input);\n    const newSubList = Object.keys(subList).reduce((object, helper) => {\n      if (subList[helper] !== input) {\n        console.log(\"sublist\", subList[helper]);\n        object[helper] = subList[helper];\n      }\n\n      return object;\n    }, {});\n    console.log(\"newSubList\", newSubList);\n    setSubList(newSubList);\n    console.log(\"subListFromDelete\", subList);\n  };\n\n  let container = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!butState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        onChange: e => formTask(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => dispatch(addTodo(task)),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => butSet(),\n        children: \"CreateSubTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        onChange: e => formTask(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => dispatchAddTodoSlave(),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => butSet(),\n        children: \"DeleteAllSubTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), subList === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(\"inside true sublist\"), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: subT,\n          onChange: e => formSubt(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => addSubTask(),\n          children: \"submit step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [Object.keys(subList).map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            readOnly: true,\n            value: subList[input].step\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => deleteSubTask(subList[input]),\n            children: \"Delete Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 60\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: subT,\n          onChange: e => formSubt(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => addSubTask(),\n          children: \"submit step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 22\n  }, this);\n\n  return container;\n};\n\n_s(CreateTask, \"IMsaaoSvcaw+vE+GCMKOltpylTs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js"],"names":["Component","useState","useEffect","useDispatch","useSelector","addTodo","addTodoSlave","CreateTask","task","setTask","subT","setSubT","subList","setSubList","butState","setButState","dispatch","formTask","e","console","log","target","value","formSubt","addSubTask","step","completed","dispatchAddTodoSlave","butSet","deleteSubTask","input","newSubList","Object","keys","reduce","object","helper","container","map"],"mappings":"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","sourcesContent":["import { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave } from \"../redux/actions\"\n\nconst CreateTask = () => {\n    const [task, setTask] = useState(null)\n    const [subT, setSubT] = useState(null)\n    const [subList, setSubList] = useState(\"\")\n    const [butState, setButState] = useState(false)\n    const dispatch = useDispatch()\n\n\n\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n\n    //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n    const addSubTask = () => {\n\n        if (subList === null) {\n            setSubList({\n                [subT]: {\n                    step: subT,\n                    completed: 0\n                }\n            })\n            console.log(\"if addSubTask\", subList)\n            setSubT(\"\")\n            console.log(\"ifsubt\", subT)\n\n        }\n\n        else {\n            console.log(\"else\", subT)\n            console.log(\"else addSubTask\", subList)\n            setSubList({\n                ...subList, [subT]: {\n                    step: subT,\n                    completed: 0\n                }\n            })\n            console.log(\"subList\", subList)\n            setSubT(\"\")\n\n        }\n\n\n\n\n    }\n    //Set state for task and subList to null\n    const dispatchAddTodoSlave = () => {\n        dispatch(addTodoSlave(task, subList))\n        setTask(\"\");\n        setSubList(\"\");\n        setButState(false)\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n    //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n    const deleteSubTask = (input) => {\n        console.log(\"deleting step\", input)\n        const newSubList = Object.keys(subList).reduce((object, helper) => {\n            if (subList[helper] !== input) {\n                console.log(\"sublist\", subList[helper])\n                object[helper] = subList[helper]\n            }\n            return object\n        }, {}\n        )\n        console.log(\"newSubList\", newSubList)\n        setSubList(newSubList)\n        console.log(\"subListFromDelete\", subList)\n    }\n\n    let container = (<div>\n        {!butState ? <div>\n            <input value={task} onChange={(e) => formTask(e)}></input>\n            <button type='submit' onClick={() => dispatch(addTodo(task))}>Add Task</button>\n            <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n        </div>\n            :\n            <div>\n                <input value={task} onChange={(e) => formTask(e)}></input>\n                <button type='submit' onClick={() => dispatchAddTodoSlave()}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                {subList === null ?\n                    <div>\n                        {console.log(\"inside true sublist\")}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                    :\n                    <div>\n                        {Object.keys(subList).map(input => <div>\n                            <input readOnly value={subList[input].step}></input>\n                            <button type=\"submit\" onClick={() => deleteSubTask(subList[input])}>Delete Step</button>\n                        </div>)}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                }\n            </div>}\n\n\n        <br></br>\n\n    </div >)\n\n    return container\n\n\n}\n\nexport default CreateTask"]},"metadata":{},"sourceType":"module"}