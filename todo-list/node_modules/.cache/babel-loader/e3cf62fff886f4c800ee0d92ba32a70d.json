{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStateFromApi, getTask, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\";\nimport TodoSubList from './todosublist';\nimport \"../css/progress.css\";\n\nconst ShowListItem = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  console.log(\"props category\", props.category);\n  console.log(\"selector state\", selector);\n  console.log(\"props category array\", selector[props.category]);\n  console.log(\"selector props category\", Object.keys(selector[props.category]).map(input => console.log(input))); //update state show on database\n\n  const toogleUpdate = input => {\n    dispatch(toogleShow(input));\n    dispatch(toogleShowAPI(input));\n    console.log(\"input show\", input);\n  };\n\n  if (Object.keys(selector).length >= 1) {\n    console.log(\"inside showItem\", selector);\n    console.log(\"using selector len\", Object.keys(selector));\n    let mapper = Object.keys(selector).map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holder\",\n      children: [console.log(\"input\", selector[input]), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: [selector[input].task, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-class\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: () => toogleUpdate(selector[input]),\n              children: \"ShowSteps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: selector[input].dateB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filler\",\n            style: {\n              width: `${selector[input].completed * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: selector[input].dateE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), console.log(\"input.date\", selector[input].dateB), console.log(\"input.steps\", selector[input].steps), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(selector[input].steps).length >= 1 && selector[input].show === true && /*#__PURE__*/_jsxDEV(TodoSubList, {\n          propsParent: selector[input],\n          props: selector[input].steps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 112\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this));\n    return mapper;\n  }\n\n  return null;\n};\n\n_s(ShowListItem, \"89b4AEtOcg6oItZHFCuzuUkVRcY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ShowListItem;\nexport default ShowListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowListItem\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js"],"names":["Component","useState","useDispatch","useSelector","getStateFromApi","getTask","toogleShow","toogleShowAPI","updateShowAPI","TodoSubList","ShowListItem","props","dispatch","selector","state","console","log","category","Object","keys","map","input","toogleUpdate","length","mapper","task","dateB","width","completed","dateE","steps","show"],"mappings":"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","sourcesContent":["import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getStateFromApi, getTask, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = (props) => {\n    const dispatch = useDispatch()\n\n    const selector = useSelector(state => state)\n    console.log(\"props category\", props.category)\n    console.log(\"selector state\", selector)\n    console.log(\"props category array\", selector[props.category])\n    console.log(\"selector props category\", Object.keys(selector[props.category]).map(input => console.log(input)))\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(toogleShowAPI(input))\n        console.log(\"input show\", input)\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    <div className=\"container\">\n                        <div className=\"item2\">{selector[input].task}\n                            <div className=\"button-class\">\n                                <button type='submit' onClick={() => (toogleUpdate(selector[input]))}  >ShowSteps</button>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateB}</div>\n                        <div className=\"item2\">\n                            <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateE}</div>\n                    </div>\n                    {console.log(\"input.date\", selector[input].dateB)}\n                    {console.log(\"input.steps\", selector[input].steps)}\n\n                    <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                    </div>\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem"]},"metadata":{},"sourceType":"module"}