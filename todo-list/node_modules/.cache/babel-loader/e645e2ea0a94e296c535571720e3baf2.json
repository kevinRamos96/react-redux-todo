{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO, POST_TASK, ADD_STATE, DELETE_TASK } from \"../actionTypes\";\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        const {\n          task,\n          date\n        } = action.payload;\n        return { ...state,\n          [task]: { ...action.payload,\n            task: task,\n            date: date\n          }\n        };\n      }\n\n    case ADD_STATE:\n      {\n        const {\n          task,\n          category,\n          steps,\n          dateB\n        } = action.payload; // const task = action.payload.task\n        // const steps = action.payload.steps\n        // const dateB = action.payload.dateB\n\n        console.log(\"action.payload\", task, steps, dateB, action.payload);\n        return { ...state,\n          [category]: { ...state[category],\n            [task]: { ...action.payload,\n              task: task,\n              category: category,\n              dateB: dateB,\n              steps: steps\n            }\n          }\n        };\n      }\n\n    case SHOW:\n      {\n        const {\n          task,\n          show,\n          category\n        } = action.payload;\n        console.log(\"inside SHOW category\", category);\n        return { ...state,\n          [category]: { ...state[category],\n            [task]: { ...action.payload,\n              show: !show\n            }\n          }\n        };\n      }\n\n    case STEP_COMPLETED:\n      {\n        const {\n          task,\n          steps,\n          category\n        } = action.payload;\n        const completed = action.newCompleted;\n        const newDate = action.newDate;\n\n        if (action.stepFinder !== null) {\n          const {\n            step\n          } = action.stepFinder;\n          return { ...state,\n            [category]: { ...state[category],\n              [task]: { ...action.payload,\n                completed: completed,\n                dateE: newDate,\n                steps: { ...steps,\n                  [step]: { ...action.stepFinder,\n                    completedS: 1\n                  }\n                }\n              }\n            }\n          };\n        }\n\n        return { ...state,\n          [category]: { ...state[category],\n            [task]: { ...action.payload,\n              dateE: newDate,\n              completed: completed\n            }\n          }\n        };\n      }\n\n    case STEP_UNDO:\n      {\n        const {\n          task,\n          steps,\n          category\n        } = action.payload;\n        const newDate = action.newDate;\n        const completed = action.newCompleted;\n        console.log(\"insde reducer completed\", completed);\n\n        if (action.stepFinder !== null) {\n          const {\n            step\n          } = action.stepFinder;\n          return { ...state,\n            [category]: { ...state[category],\n              [task]: { ...action.payload,\n                completed: completed,\n                dateE: newDate,\n                steps: { ...steps,\n                  [step]: { ...action.stepFinder,\n                    completedS: 0\n                  }\n                }\n              }\n            }\n          };\n        }\n\n        return { ...state,\n          [category]: { ...state[category],\n            [task]: { ...action.payload,\n              dateE: newDate,\n              completed: completed\n            }\n          }\n        };\n      }\n\n    case DELETE_TASK:\n      {\n        const {\n          task,\n          category\n        } = action.payload;\n        console.log(\"inside DELETE_TASK\", state[category]);\n        const temp = state[category];\n        const newState = Object.keys(temp).reduce((input, object) => {\n          console.log(\"inside reduce\", temp[input]);\n\n          if (category[input].task !== task) {\n            object[category] = category[input];\n          }\n\n          return object;\n        }, {});\n        return { ...state,\n          newState\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/redux/reducers/todoReducer.js"],"names":["axios","ADD_TODO","SHOW","ADD_TODO_SLAVE","STEP_COMPLETED","COMPLETED","STEP_UNDO","POST_TASK","ADD_STATE","DELETE_TASK","initialState","reducer","state","action","type","task","date","payload","category","steps","dateB","console","log","show","completed","newCompleted","newDate","stepFinder","step","dateE","completedS","temp","newState","Object","keys","reduce","input","object"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO, POST_TASK, ADD_STATE, DELETE_TASK } from \"../actionTypes\"\n\nconst initialState = {\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { task, date } = action.payload;\n            return {\n\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date\n                }\n            }\n        }\n\n        case ADD_STATE: {\n            const { task, category, steps, dateB, } = action.payload;\n            // const task = action.payload.task\n            // const steps = action.payload.steps\n            // const dateB = action.payload.dateB\n\n            console.log(\"action.payload\", task, steps, dateB, action.payload)\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        task: task,\n                        category: category,\n                        dateB: dateB,\n                        steps: steps\n                    }\n                }\n\n            }\n        }\n\n        case SHOW: {\n            const { task, show, category } = action.payload\n            console.log(\"inside SHOW category\", category)\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        show: !show\n                    }\n                }\n\n\n            }\n        }\n\n        case STEP_COMPLETED: {\n            const { task, steps, category } = action.payload\n            const completed = action.newCompleted\n            const newDate = action.newDate\n            if (action.stepFinder !== null) {\n                const { step } = action.stepFinder\n                return {\n                    ...state,\n                    [category]: {\n                        ...state[category],\n                        [task]: {\n                            ...action.payload,\n                            completed: completed,\n                            dateE: newDate,\n                            steps: {\n                                ...steps, [step]: { ...action.stepFinder, completedS: 1 },\n                            }\n                        }\n                    }\n\n                }\n            }\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        dateE: newDate,\n                        completed: completed,\n\n                    }\n                }\n\n            }\n        }\n\n        case STEP_UNDO: {\n            const { task, steps, category } = action.payload\n            const newDate = action.newDate\n            const completed = action.newCompleted\n            console.log(\"insde reducer completed\", completed)\n            if (action.stepFinder !== null) {\n                const { step } = action.stepFinder\n                return {\n                    ...state,\n                    [category]: {\n                        ...state[category],\n                        [task]: {\n                            ...action.payload,\n                            completed: completed,\n                            dateE: newDate,\n                            steps: {\n                                ...steps, [step]: { ...action.stepFinder, completedS: 0 },\n                            }\n                        }\n                    }\n\n                }\n            }\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        dateE: newDate,\n                        completed: completed,\n\n                    }\n                }\n\n            }\n        }\n\n        case DELETE_TASK: {\n            const { task, category } = action.payload\n            console.log(\"inside DELETE_TASK\", state[category])\n            const temp = state[category]\n            const newState = Object.keys(temp).reduce((input, object) => {\n                console.log(\"inside reduce\", temp[input])\n                if (category[input].task !== task) {\n                    object[category] = category[input]\n                }\n                return object\n            }, {})\n            return { ...state, newState }\n        }\n\n\n        default: return state\n    }\n\n}\n\n\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}