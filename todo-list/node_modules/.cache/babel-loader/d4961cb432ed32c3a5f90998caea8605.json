{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, addTodoSlave } from \"../redux/actions\";\nimport { ADD_TODO_SLAVE } from \"../redux/actionTypes\";\n\nconst CreateTask = () => {\n  _s();\n\n  const [task, setTask] = useState(null);\n  const [emptyInputs, setEmptyInputs] = useState([\"empty\"]);\n  const [subT, setSubT] = useState(\"\");\n  const [subList, setSubList] = useState(null);\n  const [butState, setButState] = useState(false);\n  const dispatch = useDispatch();\n\n  const formTask = e => {\n    console.log(\"target\", e.target.value);\n    setTask(e.target.value);\n    console.log(\"target\", task);\n  };\n\n  const addInput = () => {\n    console.log(\"inside add\", emptyInputs);\n    setEmptyInputs([...emptyInputs, \"empty\"]);\n    console.log(\"inside add\", emptyInputs);\n  };\n\n  const formSubt = e => {\n    setSubT(e.target.value);\n    console.log(\"subT\", subT);\n  };\n\n  const addSubTask = () => {\n    setSubList({ ...subList,\n      [subT]: subT\n    });\n    console.log(\"subList\", subList);\n    setSubT(null);\n  };\n\n  const butSet = () => {\n    setButState(!butState);\n  };\n\n  let container = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!butState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        onChange: e => formTask(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => dispatch(addTodo(task)),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => butSet(),\n        children: \"CreateSubTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        onChange: e => formTask(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => addInput(),\n        children: \"AddStpes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => dispatch(ADD_TODO_SLAVE(task, subT)),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => butSet(),\n        children: \"DeleteAllSubTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), emptyInputs !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: emptyInputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: subT,\n            onChange: e => formSubt(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => addSubTask(),\n            children: \"addStep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 22\n  }, this);\n\n  return container;\n};\n\n_s(CreateTask, \"oB8tmMO0CTWB73np4sJTJ4BJBmE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js"],"names":["Component","useState","useDispatch","useSelector","addTodo","addTodoSlave","ADD_TODO_SLAVE","CreateTask","task","setTask","emptyInputs","setEmptyInputs","subT","setSubT","subList","setSubList","butState","setButState","dispatch","formTask","e","console","log","target","value","addInput","formSubt","addSubTask","butSet","container","map","input"],"mappings":"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","sourcesContent":["import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave } from \"../redux/actions\"\nimport { ADD_TODO_SLAVE } from \"../redux/actionTypes\";\n\nconst CreateTask = () => {\n    const [task, setTask] = useState(null)\n    const [emptyInputs, setEmptyInputs] = useState([\"empty\"])\n    const [subT, setSubT] = useState(\"\")\n    const [subList, setSubList] = useState(null)\n    const [butState, setButState] = useState(false)\n    const dispatch = useDispatch()\n\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n    const addInput = () => {\n        console.log(\"inside add\", emptyInputs)\n        setEmptyInputs([...emptyInputs, \"empty\"])\n        console.log(\"inside add\", emptyInputs)\n    }\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n    const addSubTask = () => {\n        setSubList({ ...subList, [subT]: subT })\n        console.log(\"subList\", subList)\n        setSubT(null)\n\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n\n    let container = (<div>\n        {!butState ? <div>\n            <input value={task} onChange={(e) => formTask(e)}></input>\n            <button type='submit' onClick={() => dispatch(addTodo(task))}>Add Task</button>\n            <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n        </div>\n            :\n            <div>\n                <input value={task} onChange={(e) => formTask(e)}></input>\n                <button type='submit' onClick={() => addInput()}>AddStpes</button>\n                <button type='submit' onClick={() => dispatch(ADD_TODO_SLAVE(task, subT))}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                {emptyInputs !== null && <div>{emptyInputs.map(\n                    input => <div><input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>addStep</button> </div>\n                )}</div>\n\n                }\n            </div>}\n\n\n        <br></br>\n\n    </div >)\n\n    return container\n\n\n}\n\nexport default CreateTask"]},"metadata":{},"sourceType":"module"}