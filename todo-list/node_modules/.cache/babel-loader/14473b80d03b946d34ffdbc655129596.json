{"ast":null,"code":"import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toogleShow } from \"../redux/actions\";\n\nconst widthCompletion = child => {\n  let index = 0,\n      counter = 0,\n      result = 0;\n  Object.keys(child).map(input => {\n    //index counts the number of steps, while counter the number of completed steps\n    index = index + 1;\n\n    if (child[input].completed > 0) {\n      counter = counter + 1;\n      console.log(\"result for counter\", counter);\n    }\n  });\n\n  if (counter > 0) {\n    result = counter / index;\n    console.log(\"result for new state\", result);\n    return result;\n  }\n\n  console.log(\"result for index\", index);\n  console.log(\"result for new state\", result);\n  return 0;\n};\n\nexport default widthCompletion;","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/widthCompletion.js"],"names":["Component","useState","useDispatch","useSelector","toogleShow","widthCompletion","child","index","counter","result","Object","keys","map","input","completed","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,MAAIC,KAAK,GAAG,CAAZ;AAAA,MAAeC,OAAO,GAAG,CAAzB;AAAA,MAA4BC,MAAM,GAAG,CAArC;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,GAAnB,CAAuBC,KAAK,IAAI;AAC5B;AACAN,IAAAA,KAAK,GAAGA,KAAK,GAAG,CAAhB;;AACA,QAAID,KAAK,CAACO,KAAD,CAAL,CAAaC,SAAb,GAAyB,CAA7B,EAAgC;AAC5BN,MAAAA,OAAO,GAAIA,OAAO,GAAG,CAArB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCR,OAAlC;AAEH;AACJ,GARD;;AASA,MAAIA,OAAO,GAAG,CAAd,EAAiB;AACbC,IAAAA,MAAM,GAAID,OAAO,GAAGD,KAApB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCP,MAApC;AACA,WAAOA,MAAP;AACH;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCT,KAAhC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCP,MAApC;AACA,SAAO,CAAP;AACH,CApBD;;AAsBA,eAAeJ,eAAf","sourcesContent":["import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nconst widthCompletion = (child) => {\n    let index = 0, counter = 0, result = 0\n    Object.keys(child).map(input => {\n        //index counts the number of steps, while counter the number of completed steps\n        index = index + 1\n        if (child[input].completed > 0) {\n            counter = (counter + 1)\n            console.log(\"result for counter\", counter)\n\n        }\n    })\n    if (counter > 0) {\n        result = (counter / index)\n        console.log(\"result for new state\", result)\n        return result\n    }\n    console.log(\"result for index\", index)\n\n    console.log(\"result for new state\", result)\n    return 0\n}\n\nexport default widthCompletion"]},"metadata":{},"sourceType":"module"}