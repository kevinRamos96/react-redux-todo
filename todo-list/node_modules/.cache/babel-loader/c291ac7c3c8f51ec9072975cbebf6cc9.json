{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTask, toogleShow } from \"../redux/actions\";\nimport TodoSubList from './todosublist';\nimport \"../css/progress.css\";\n\nconst ShowListItem = () => {\n  _s();\n\n  const selector = useSelector(state => state);\n  console.log(\"selector\", selector);\n  const dispatch = useDispatch();\n  const apidata = dispatch(getTask());\n  console.log(\"apidata\", apidata);\n\n  if (Object.keys(selector).length >= 1) {\n    console.log(\"inside showItem\", selector);\n    console.log(\"using selector len\", Object.keys(selector));\n    let mapper = Object.keys(selector).map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holder\",\n      children: [console.log(\"input\", selector[input]), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: [selector[input].task, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => dispatch(toogleShow(selector[input])),\n            children: \"Clickhere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: selector[input].dateB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filler\",\n            style: {\n              width: `${selector[input].completed * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item2\",\n          children: selector[input].dateE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), console.log(\"input.date\", selector[input].dateB), console.log(\"input.steps\", selector[input].steps), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(selector[input].steps).length > 1 && selector[input].show === true && /*#__PURE__*/_jsxDEV(TodoSubList, {\n          propsParent: selector[input],\n          props: selector[input].steps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 111\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this));\n    return mapper;\n  }\n\n  return null;\n};\n\n_s(ShowListItem, \"0w3kP+MS1H/r7gjB4JffQTmF+7Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShowListItem;\nexport default ShowListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowListItem\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js"],"names":["Component","useState","useDispatch","useSelector","getTask","toogleShow","TodoSubList","ShowListItem","selector","state","console","log","dispatch","apidata","Object","keys","length","mapper","map","input","task","dateB","width","completed","dateE","steps","show"],"mappings":"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","sourcesContent":["import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getTask, toogleShow } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = () => {\n    const selector = useSelector(state => state)\n    console.log(\"selector\", selector)\n    const dispatch = useDispatch()\n    const apidata = dispatch(getTask())\n    console.log(\"apidata\", apidata)\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    <div className=\"container\">\n                        <div className=\"item2\">{selector[input].task}<button type='submit' onClick={() => dispatch(toogleShow(selector[input]))}  >Clickhere</button></div>\n                        <div className=\"item2\">{selector[input].dateB}</div>\n                        <div className=\"item2\">\n                            <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateE}</div>\n                    </div>\n                    {console.log(\"input.date\", selector[input].dateB)}\n                    {console.log(\"input.steps\", selector[input].steps)}\n\n                    <div>{(Object.keys(selector[input].steps).length > 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                    </div>\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem"]},"metadata":{},"sourceType":"module"}