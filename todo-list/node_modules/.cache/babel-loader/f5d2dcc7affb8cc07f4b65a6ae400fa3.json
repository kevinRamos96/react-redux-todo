{"ast":null,"code":"import _slicedToArray from\"/Users/cait02/Desktop/Begin/React/todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{Component,useState}from\"react\";import TodoList from'./components/todolist';import GetDataFromAPI from'./components/getDataAPI';var App=function App(){var todo=[{task:\"firts\",dateB:\"1/1/1\",dateE:\"1/1/1\",completed:false,show:false,steps:[{miniT:\"test\",completed:true},{miniT:'test2'}]},{task:\"second\",dateB:\"1/1/1\",dateE:\"1/1/1\",completed:false,show:false,steps:[{miniT:\"test\",completed:true},{miniT:'test2'}]},{task:\"third\",dateB:\"1/1/1\",dateE:\"1/1/1\",completed:false,show:false,steps:[]}];//Initiate redux state if there is data saved omn DB with GETDataFromAPI() needs to only be run once at the beginning\n//of the application if it is run other than at the beginning it casuse the app to create an infinite loop of API calls\n//due to constantly re rendering\nvar data=GetDataFromAPI();//initiate redux state\nvar _useState=useState(todo),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];console.log(\"state\",state);var container=TodoList(state);console.log(\"debug\",container);return container;};export default App;","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/App.js"],"names":["React","Component","useState","TodoList","GetDataFromAPI","App","todo","task","dateB","dateE","completed","show","steps","miniT","data","state","setState","console","log","container"],"mappings":"kKAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,CACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAEhB,GAAMC,CAAAA,IAAI,CACR,CAAC,CACCC,IAAI,CAAE,OADP,CAECC,KAAK,CAAE,OAFR,CAGCC,KAAK,CAAE,OAHR,CAICC,SAAS,CAAE,KAJZ,CAKCC,IAAI,CAAE,KALP,CAMCC,KAAK,CAAE,CAAC,CACNC,KAAK,CAAE,MADD,CAENH,SAAS,CAAE,IAFL,CAAD,CAIP,CACEG,KAAK,CAAE,OADT,CAJO,CANR,CAAD,CAcA,CACEN,IAAI,CAAE,QADR,CAEEC,KAAK,CAAE,OAFT,CAGEC,KAAK,CAAE,OAHT,CAIEC,SAAS,CAAE,KAJb,CAKEC,IAAI,CAAE,KALR,CAMEC,KAAK,CAAE,CAAC,CACNC,KAAK,CAAE,MADD,CAENH,SAAS,CAAE,IAFL,CAAD,CAIP,CACEG,KAAK,CAAE,OADT,CAJO,CANT,CAdA,CA4BA,CACEN,IAAI,CAAE,OADR,CAEEC,KAAK,CAAE,OAFT,CAGEC,KAAK,CAAE,OAHT,CAIEC,SAAS,CAAE,KAJb,CAKEC,IAAI,CAAE,KALR,CAMEC,KAAK,CAAE,EANT,CA5BA,CADF,CAqCA;AACA;AACA;AACA,GAAME,CAAAA,IAAI,CAAGV,cAAc,EAA3B,CAA8B;AA1Cd,cA2CUF,QAAQ,CAACI,IAAD,CA3ClB,wCA2CTS,KA3CS,eA2CFC,QA3CE,eA4ChBC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBH,KAArB,EACA,GAAII,CAAAA,SAAS,CAAGhB,QAAQ,CAACY,KAAD,CAAxB,CACAE,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBC,SAArB,EAEA,MAAOA,CAAAA,SAAP,CAED,CAlDD,CAqDA,cAAed,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { Component, useState } from \"react\"\nimport TodoList from './components/todolist'\nimport GetDataFromAPI from './components/getDataAPI'\nconst App = () => {\n\n  const todo =\n    [{\n      task: \"firts\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"second\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"third\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: []\n    }]\n  //Initiate redux state if there is data saved omn DB with GETDataFromAPI() needs to only be run once at the beginning\n  //of the application if it is run other than at the beginning it casuse the app to create an infinite loop of API calls\n  //due to constantly re rendering\n  const data = GetDataFromAPI() //initiate redux state\n  const [state, setState] = useState(todo)\n  console.log(\"state\", state)\n  let container = TodoList(state)\n  console.log(\"debug\", container)\n\n  return container;\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}