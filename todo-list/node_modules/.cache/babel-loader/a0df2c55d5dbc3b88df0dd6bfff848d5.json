{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport TodoSubList from './todosublist';\nimport ShowListItem from './showListItems';\nimport CreateTask from './createTask';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toogleShow } from \"../redux/actions\";\nimport GetDataFromAPI from \"./getDataAPI\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport CreateCollection from './createCollection';\n\nconst createList = e => {};\n\nconst fetchLists = () => {};\n\nconst TodoList = props => {\n  _s();\n\n  const [list, setList] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [data, setData] = useState(props.data);\n  const [category, setCategory] = useState(\"\");\n  console.log(\"data from APP.JS\", props.data); //change category\n\n  const changeCategory = input => {\n    setCategory(input);\n    console.log(\"cate4gori\", category);\n  }; //setModal\n\n\n  const toogleModal = () => {\n    setModal(!modal);\n    console.log(\"modal\", modal);\n  };\n\n  const changeList = e => {\n    setList(e.target.value);\n    console.log(\"changeList\", list);\n  }; //set up state from app.js\n\n\n  let content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-boxes\",\n          children: Object.keys(data).map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-box\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeCategory(data[input]),\n              children: data[input]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-box\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: () => toogleModal(),\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [data == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [toogleModal(), console.log(\"if data is emplty modal is\", modal), /*#__PURE__*/_jsxDEV(CreateTask, {\n            content: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: list,\n              onChange: e => changeList(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this),\n            closeModal: toogleModal,\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: modal && /*#__PURE__*/_jsxDEV(CreateTask, {\n            content: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: list,\n              onChange: e => changeList(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this),\n            closeModal: toogleModal,\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 39\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(ShowListItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n\n  return content;\n};\n\n_s(TodoList, \"2ybjqND6GXeIgmz+nbGFQn6X4vA=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js"],"names":["React","Component","useState","TodoSubList","ShowListItem","CreateTask","useDispatch","useSelector","toogleShow","GetDataFromAPI","axios","CreateCollection","createList","e","fetchLists","TodoList","props","list","setList","modal","setModal","data","setData","category","setCategory","console","log","changeCategory","input","toogleModal","changeList","target","value","content","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\nimport GetDataFromAPI from \"./getDataAPI\"\nimport axios from \"axios\"\nimport \"../App.css\"\nimport CreateCollection from './createCollection';\n\nconst createList = (e) => {\n\n}\nconst fetchLists = () => { }\n\nconst TodoList = (props) => {\n    const [list, setList] = useState(\"\")\n    const [modal, setModal] = useState(false)\n    const [data, setData] = useState(props.data)\n    const [category, setCategory] = useState(\"\")\n    console.log(\"data from APP.JS\", props.data)\n\n    //change category\n    const changeCategory = (input) => {\n        setCategory(input)\n        console.log(\"cate4gori\", category)\n    }\n    //setModal\n    const toogleModal = () => {\n        setModal(!modal);\n        console.log(\"modal\", modal)\n    }\n    const changeList = (e) => {\n        setList(e.target.value);\n        console.log(\"changeList\", list)\n\n    }\n    //set up state from app.js\n    let content = (\n        <div>\n            <div className=\"main\">\n                <div className=\"main-menu\">\n                    <div className=\"menu-boxes\">\n                        {Object.keys(data).map(input =>\n                            <div className=\"btn-box\">\n                                <button onClick={() => changeCategory(data[input])} >{data[input]}</button>\n                            </div>\n                        )}\n\n                    </div>\n                    <div className=\"footer\">\n                        <div className=\"footer-box\">\n                            <button type=\"submit\" onClick={() => toogleModal()}>Add Task</button>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"main-content\">\n                    {data == null ?\n                        <>\n                            {toogleModal()}\n                            {console.log(\"if data is emplty modal is\", modal)}\n                            <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModal}\n                                category={category}>\n\n                            </CreateTask>\n                        </>\n                        :\n                        <>\n                            {modal && <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModal}\n                                category={category}\n                            />}\n\n                        </>\n\n                    }\n\n                    <ShowListItem\n                    />\n\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}