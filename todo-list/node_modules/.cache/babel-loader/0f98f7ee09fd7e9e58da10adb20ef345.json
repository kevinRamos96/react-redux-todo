{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Component,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{getStateFromApi,getTask,toogleShow,toogleShowAPI,updateShowAPI}from\"../redux/actions\";import TodoSubList from'./todosublist';import\"../css/progress.css\";var ShowListItem=function ShowListItem(){var dispatch=useDispatch();var selector=useSelector(function(state){return state;});console.log(\"selector\",selector);//update state show on database\nvar toogleUpdate=function toogleUpdate(input){dispatch(toogleShow(input));dispatch(toogleShowAPI(input));console.log(\"input show\",input);};if(Object.keys(selector).length>=1){console.log(\"inside showItem\",selector);console.log(\"using selector len\",Object.keys(selector));var mapper=Object.keys(selector).map(function(input){return/*#__PURE__*/_jsxs(\"div\",{className:\"holder\",children:[console.log(\"input\",selector[input]),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item2\",children:[selector[input].task,/*#__PURE__*/_jsx(\"div\",{className:\"button-class\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:function onClick(){return toogleUpdate(selector[input]);},children:\"ShowSteps\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item2\",children:selector[input].dateB}),/*#__PURE__*/_jsx(\"div\",{className:\"item2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"filler\",style:{width:\"\".concat(selector[input].completed*100,\"%\")}})}),/*#__PURE__*/_jsx(\"div\",{className:\"item2\",children:selector[input].dateE})]}),console.log(\"input.date\",selector[input].dateB),console.log(\"input.steps\",selector[input].steps),/*#__PURE__*/_jsx(\"div\",{children:Object.keys(selector[input].steps).length>=1&&selector[input].show===true&&/*#__PURE__*/_jsx(TodoSubList,{propsParent:selector[input],props:selector[input].steps})})]});});return mapper;}return null;};export default ShowListItem;","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js"],"names":["Component","useState","useDispatch","useSelector","getStateFromApi","getTask","toogleShow","toogleShowAPI","updateShowAPI","TodoSubList","ShowListItem","dispatch","selector","state","console","log","toogleUpdate","input","Object","keys","length","mapper","map","task","dateB","width","completed","dateE","steps","show"],"mappings":"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","sourcesContent":["import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getStateFromApi, getTask, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = () => {\n    const dispatch = useDispatch()\n\n    const selector = useSelector(state => state)\n    console.log(\"selector\", selector)\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(toogleShowAPI(input))\n        console.log(\"input show\", input)\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    <div className=\"container\">\n                        <div className=\"item2\">{selector[input].task}\n                            <div className=\"button-class\">\n                                <button type='submit' onClick={() => (toogleUpdate(selector[input]))}  >ShowSteps</button>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateB}</div>\n                        <div className=\"item2\">\n                            <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateE}</div>\n                    </div>\n                    {console.log(\"input.date\", selector[input].dateB)}\n                    {console.log(\"input.steps\", selector[input].steps)}\n\n                    <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                    </div>\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem"]},"metadata":{},"sourceType":"module"}