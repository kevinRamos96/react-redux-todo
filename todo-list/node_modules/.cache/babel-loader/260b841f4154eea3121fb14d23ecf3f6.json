{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport TodoSubList from './todosublist';\nimport ShowListItem from './showListItems';\nimport CreateTask from './createTask';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../App.css\";\n\nconst TodoList = props => {\n  _s();\n\n  const [list, setList] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [data, setData] = useState(props.data);\n  const state = useSelector(input => input);\n  const [category, setCategory] = useState(\"\");\n  console.log(\"data from APP.JS\", props.data);\n  console.log(\"data from APP.JS\", data.length);\n  console.log(\"state from APP.JS\", state); //change category\n\n  const changeCategory = input => {\n    setCategory(input);\n    console.log(\"cate4gori\", category);\n  }; //setModal\n\n\n  const toogleModalCategory = () => {\n    setModal(!modal);\n    setCategory(\"\");\n    console.log(\"modal\", modal);\n  };\n\n  const changeList = e => {\n    setList(e.target.value);\n    console.log(\"changeList\", list);\n  }; //set up state from app.js\n\n\n  let content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-boxes\",\n          children: data.length > Object.keys(state).length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: Object.keys(data).map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-box\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeCategory(data[input]),\n                children: data[input]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: Object.keys(state).length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: Object.keys(state).map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-box\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => changeCategory(input),\n                  children: input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 49\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-box\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: () => toogleModalCategory(),\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [data.length === 0 && Object.keys(state).length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [console.log(\"if data is emplty modal is\", modal), /*#__PURE__*/_jsxDEV(CreateTask, {\n            content: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: list,\n              onChange: e => changeList(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this),\n            closeModal: toogleModalCategory,\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: modal && /*#__PURE__*/_jsxDEV(CreateTask, {\n            content: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: list,\n              onChange: e => changeList(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this),\n            closeModal: toogleModalCategory,\n            category: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 39\n          }, this)\n        }, void 0, false), category !== \"\" && /*#__PURE__*/_jsxDEV(ShowListItem, {\n          category: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n\n  return content;\n};\n\n_s(TodoList, \"ZTmW5vJlwoQG3ReAU941yxgUOSo=\", false, function () {\n  return [useSelector];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js"],"names":["React","Component","useEffect","useState","TodoSubList","ShowListItem","CreateTask","useDispatch","useSelector","TodoList","props","list","setList","modal","setModal","data","setData","state","input","category","setCategory","console","log","length","changeCategory","toogleModalCategory","changeList","e","target","value","content","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport \"../App.css\"\n\n\nconst TodoList = (props) => {\n    const [list, setList] = useState(\"\")\n    const [modal, setModal] = useState(false)\n    const [data, setData] = useState(props.data)\n    const state = useSelector(input => input)\n    const [category, setCategory] = useState(\"\")\n    console.log(\"data from APP.JS\", props.data)\n    console.log(\"data from APP.JS\", data.length)\n    console.log(\"state from APP.JS\", state)\n\n    //change category\n    const changeCategory = (input) => {\n        setCategory(input)\n        console.log(\"cate4gori\", category)\n    }\n    //setModal\n    const toogleModalCategory = () => {\n        setModal(!modal);\n        setCategory(\"\")\n        console.log(\"modal\", modal)\n    }\n    const changeList = (e) => {\n        setList(e.target.value);\n        console.log(\"changeList\", list)\n\n    }\n    //set up state from app.js\n    let content = (\n        <div>\n            <div className=\"main\">\n                <div className=\"main-menu\">\n                    <div className=\"menu-boxes\">\n                        {(data.length > Object.keys(state).length) ?\n                            <>\n                                {Object.keys(data).map(input =>\n                                    <div className=\"btn-box\">\n                                        <button onClick={() => changeCategory(data[input])} >{data[input]}</button>\n                                    </div>\n                                )}\n                            </>\n                            :\n                            <>\n                                {\n                                    (Object.keys(state).length > 0) ?\n                                        <>\n                                            {Object.keys(state).map(input =>\n                                                <div className=\"btn-box\">\n                                                    <button onClick={() => changeCategory(input)} >{input}</button>\n                                                </div>\n                                            )}\n                                        </>\n\n                                        :\n\n                                        <></>\n\n                                }\n                            </>\n                        }\n\n                    </div>\n                    <div className=\"footer\">\n                        <div className=\"footer-box\">\n                            <button type=\"submit\" onClick={() => toogleModalCategory()}>Add Task</button>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"main-content\">\n                    {(data.length === 0 && Object.keys(state).length === 0) ?\n                        <>\n\n                            {console.log(\"if data is emplty modal is\", modal)}\n                            <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModalCategory}\n                                category={category}>\n\n                            </CreateTask>\n                        </>\n                        :\n                        <>\n                            {modal && <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModalCategory}\n                                category={category}\n                            />}\n\n                        </>\n\n                    }\n                    {category !== \"\" && <ShowListItem\n                        category={category}\n\n                    />}\n\n\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}