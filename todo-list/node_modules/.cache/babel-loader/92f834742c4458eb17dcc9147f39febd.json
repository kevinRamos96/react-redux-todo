{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStateFromApi, getTask, stepCompleted, stepUndo, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\";\nimport TodoSubList from './todosublist';\nimport \"../css/progress.css\";\n\nconst ShowListItem = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const tempState = useSelector(state => state);\n  const selector = tempState[props.category];\n  console.log(\"props category\", props.category);\n  console.log(\"selector state\", selector);\n  console.log(\"props category array\", selector[props.category]); //update state show on database\n\n  const toogleUpdate = input => {\n    dispatch(toogleShow(input));\n    dispatch(toogleShowAPI(input));\n    console.log(\"input show\", input);\n  };\n\n  if (Object.keys(selector).length >= 1) {\n    console.log(\"inside showItem\", selector);\n    console.log(\"using selector len\", Object.keys(selector));\n    let mapper = Object.keys(selector).map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holder\",\n      children: [console.log(\"input\", selector[input]), Object.keys(selector[input].steps).length == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: [selector[input].task, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-class\",\n              children: selector[input].completed === 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: () => stepUndo(null, selector[input], 0),\n                children: \"Undo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: () => stepCompleted(null, selector[input], 1),\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: selector[input].dateB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filler\",\n              style: {\n                width: `${selector[input].completed * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: selector[input].dateE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: [selector[input].task, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-class\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: () => toogleUpdate(selector[input]),\n                children: \"ShowSteps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: selector[input].dateB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filler\",\n              style: {\n                width: `${selector[input].completed * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item2\",\n            children: selector[input].dateE\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), console.log(\"input.date\", selector[input].dateB), console.log(\"input.steps\", selector[input].steps), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Object.keys(selector[input].steps).length >= 1 && selector[input].show === true && /*#__PURE__*/_jsxDEV(TodoSubList, {\n            propsParent: selector[input],\n            props: selector[input].steps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 120\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this));\n    return mapper;\n  }\n\n  return null;\n};\n\n_s(ShowListItem, \"HPH1TB8Y7IXkGkNHgoFOXoT/SPk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ShowListItem;\nexport default ShowListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowListItem\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js"],"names":["Component","useState","useDispatch","useSelector","getStateFromApi","getTask","stepCompleted","stepUndo","toogleShow","toogleShowAPI","updateShowAPI","TodoSubList","ShowListItem","props","dispatch","tempState","state","selector","category","console","log","toogleUpdate","input","Object","keys","length","mapper","map","steps","task","completed","dateB","width","dateE","show"],"mappings":"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","sourcesContent":["import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getStateFromApi, getTask, stepCompleted, stepUndo, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = (props) => {\n    const dispatch = useDispatch()\n\n    const tempState = useSelector(state => state)\n    const selector = tempState[props.category]\n    console.log(\"props category\", props.category)\n    console.log(\"selector state\", selector)\n    console.log(\"props category array\", selector[props.category])\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(toogleShowAPI(input))\n        console.log(\"input show\", input)\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    {(Object.keys(selector[input].steps).length == 0) ?\n\n                        <>\n                            <div className=\"container\">\n\n                                <div className=\"item2\">{selector[input].task}\n                                    <div className=\"button-class\">\n                                        {selector[input].completed === 1 ?\n                                            <button type='submit' onClick={() => (stepUndo(null, selector[input], 0))}  >Undo</button>\n                                            :\n                                            <button type='submit' onClick={() => (stepCompleted(null, selector[input], 1))}  >Completed</button>\n                                        }\n\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateB}</div>\n                                <div className=\"item2\">\n                                    <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateE}</div>\n                            </div>\n                        </>\n\n                        :\n                        <>\n                            <div className=\"container\">\n\n                                <div className=\"item2\">{selector[input].task}\n                                    <div className=\"button-class\">\n                                        <button type='submit' onClick={() => (toogleUpdate(selector[input]))}  >ShowSteps</button>\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateB}</div>\n                                <div className=\"item2\">\n                                    <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateE}</div>\n                            </div>\n                            {console.log(\"input.date\", selector[input].dateB)}\n                            {console.log(\"input.steps\", selector[input].steps)}\n\n                            <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                            </div>\n\n\n                        </>\n                    }\n\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem"]},"metadata":{},"sourceType":"module"}