{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, addTodoSlave } from \"../redux/actions\";\nimport { ADD_TODO_SLAVE } from \"../redux/actionTypes\";\n\nconst CreateTask = () => {\n  _s();\n\n  const [task, setTask] = useState(null);\n  const [emptyInputs, setEmptyInputs] = useState([\"empty\"]);\n  const [subT, setSubT] = useState(null);\n  const [butState, setButState] = useState(false);\n  const dispatch = useDispatch();\n\n  const formTask = e => {\n    console.log(\"target\", e.target.value);\n    setTask(e.target.value);\n    console.log(\"target\", task);\n  };\n\n  const addInput = () => {\n    console.log(\"inside add\", emptyInputs);\n    setEmptyInputs([...emptyInputs, \"empty\"]);\n    console.log(\"inside add\", emptyInputs);\n  };\n\n  const formSubt = e => {\n    setSubT(...subT, {\n      [e.target.value]: e.target.value\n    });\n    console.log(\"subT\", subT);\n  };\n\n  const butSet = () => {\n    setButState(!butState);\n  };\n\n  let container = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!butState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        onChange: e => formTask(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => dispatch(addTodo(task)),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => butSet(),\n        children: \"CreateSubTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task,\n        onChange: e => formTask(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => addInput(),\n        children: \"AddStpes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => dispatch(ADD_TODO_SLAVE(task, subT)),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => butSet(),\n        children: \"DeleteAllSubTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), emptyInputs !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: emptyInputs.map(input => /*#__PURE__*/_jsxDEV(\"input\", {\n          value: subT,\n          onChange: e => formSubt(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 22\n  }, this);\n\n  return container;\n};\n\n_s(CreateTask, \"XcoqethAbuD++brLGqflBTOopH4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js"],"names":["Component","useState","useDispatch","useSelector","addTodo","addTodoSlave","ADD_TODO_SLAVE","CreateTask","task","setTask","emptyInputs","setEmptyInputs","subT","setSubT","butState","setButState","dispatch","formTask","e","console","log","target","value","addInput","formSubt","butSet","container","map","input"],"mappings":"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","sourcesContent":["import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave } from \"../redux/actions\"\nimport { ADD_TODO_SLAVE } from \"../redux/actionTypes\";\n\nconst CreateTask = () => {\n    const [task, setTask] = useState(null)\n    const [emptyInputs, setEmptyInputs] = useState([\"empty\"])\n    const [subT, setSubT] = useState(null)\n    const [butState, setButState] = useState(false)\n    const dispatch = useDispatch()\n\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n    const addInput = () => {\n        console.log(\"inside add\", emptyInputs)\n        setEmptyInputs([...emptyInputs, \"empty\"])\n        console.log(\"inside add\", emptyInputs)\n    }\n\n    const formSubt = (e) => {\n        setSubT(...subT, { [e.target.value]: e.target.value })\n        console.log(\"subT\", subT)\n    }\n\n    const butSet = () => {\n        setButState(!butState)\n    }\n\n    let container = (<div>\n        {!butState ? <div>\n            <input value={task} onChange={(e) => formTask(e)}></input>\n            <button type='submit' onClick={() => dispatch(addTodo(task))}>Add Task</button>\n            <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n        </div>\n            :\n            <div>\n                <input value={task} onChange={(e) => formTask(e)}></input>\n                <button type='submit' onClick={() => addInput()}>AddStpes</button>\n                <button type='submit' onClick={() => dispatch(ADD_TODO_SLAVE(task, subT))}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                {emptyInputs !== null && <div>{emptyInputs.map(\n                    input => <input value={subT} onChange={(e) => formSubt(e)}></input>)}</div>\n\n                }\n            </div>}\n\n\n        <br></br>\n\n    </div >)\n\n    return container\n\n\n}\n\nexport default CreateTask"]},"metadata":{},"sourceType":"module"}