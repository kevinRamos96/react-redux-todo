{"ast":null,"code":"import { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO } from \"../actionTypes\";\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        const {\n          task,\n          date\n        } = action.payload;\n        return { ...state,\n          [task]: { ...action.payload,\n            task: task,\n            date: date\n          }\n        };\n      }\n\n    case ADD_TODO_SLAVE:\n      {\n        const {\n          task,\n          steps,\n          date\n        } = action.payload;\n        return { ...state,\n          [task]: { ...action.payload,\n            task: task,\n            date: date,\n            steps: steps\n          }\n        };\n      }\n\n    case SHOW:\n      {\n        const {\n          task,\n          show\n        } = action.payload;\n        return { ...state,\n          [task]: { ...action.payload,\n            show: !show\n          }\n        };\n      }\n\n    case STEP_COMPLETED:\n      {\n        const {\n          task,\n          steps\n        } = action.payload;\n        const completed = action.newCompleted;\n        const {\n          step\n        } = action.stepFinder;\n        return { ...state,\n          [task]: { ...action.payload,\n            completed: completed,\n            steps: { ...steps,\n              [step]: { ...action.stepFinder,\n                completed: 1\n              }\n            }\n          }\n        };\n      }\n\n    case STEP_UNDO:\n      {\n        const {\n          task,\n          steps\n        } = action.payload;\n        const completed = action.newCompleted;\n        const {\n          step\n        } = action.stepFinder;\n        console.log(\"insde reducer completed\", completed);\n        return { ...state,\n          [task]: { ...action.payload,\n            completed: completed,\n            steps: { ...steps,\n              [step]: { ...action.stepFinder,\n                completed: 0\n              }\n            }\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/cait02/Desktop/Begin/React/todo-list/src/redux/reducers/todoReducer.js"],"names":["ADD_TODO","SHOW","ADD_TODO_SLAVE","STEP_COMPLETED","COMPLETED","STEP_UNDO","initialState","reducer","state","action","type","task","date","payload","steps","show","completed","newCompleted","step","stepFinder","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,IAAnB,EAAyBC,cAAzB,EAAyCC,cAAzC,EAAyDC,SAAzD,EAAoEC,SAApE,QAAqF,gBAArF;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,QAAL;AAAe;AACX,cAAM;AAAEW,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAiBH,MAAM,CAACI,OAA9B;AACA,eAAO,EAEH,GAAGL,KAFA;AAGH,WAACG,IAAD,GAAQ,EACJ,GAAGF,MAAM,CAACI,OADN;AAEJF,YAAAA,IAAI,EAAEA,IAFF;AAGJC,YAAAA,IAAI,EAAEA;AAHF;AAHL,SAAP;AAUH;;AAED,SAAKV,cAAL;AAAqB;AACjB,cAAM;AAAES,UAAAA,IAAF;AAAQG,UAAAA,KAAR;AAAeF,UAAAA;AAAf,YAAwBH,MAAM,CAACI,OAArC;AACA,eAAO,EACH,GAAGL,KADA;AAEH,WAACG,IAAD,GAAQ,EACJ,GAAGF,MAAM,CAACI,OADN;AAEJF,YAAAA,IAAI,EAAEA,IAFF;AAGJC,YAAAA,IAAI,EAAEA,IAHF;AAIJE,YAAAA,KAAK,EAAEA;AAJH;AAFL,SAAP;AASH;;AAED,SAAKb,IAAL;AAAW;AACP,cAAM;AAAEU,UAAAA,IAAF;AAAQI,UAAAA;AAAR,YAAiBN,MAAM,CAACI,OAA9B;AACA,eAAO,EACH,GAAGL,KADA;AAEH,WAACG,IAAD,GAAQ,EACJ,GAAGF,MAAM,CAACI,OADN;AAEJE,YAAAA,IAAI,EAAE,CAACA;AAFH;AAFL,SAAP;AAQH;;AAED,SAAKZ,cAAL;AAAqB;AACjB,cAAM;AAAEQ,UAAAA,IAAF;AAAQG,UAAAA;AAAR,YAAkBL,MAAM,CAACI,OAA/B;AACA,cAAMG,SAAS,GAAGP,MAAM,CAACQ,YAAzB;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAWT,MAAM,CAACU,UAAxB;AACA,eAAO,EACH,GAAGX,KADA;AAEH,WAACG,IAAD,GAAQ,EACJ,GAAGF,MAAM,CAACI,OADN;AAEJG,YAAAA,SAAS,EAAEA,SAFP;AAGJF,YAAAA,KAAK,EAAE,EACH,GAAGA,KADA;AACO,eAACI,IAAD,GAAQ,EAAE,GAAGT,MAAM,CAACU,UAAZ;AAAwBH,gBAAAA,SAAS,EAAE;AAAnC;AADf;AAHH;AAFL,SAAP;AAUH;;AAED,SAAKX,SAAL;AAAgB;AACZ,cAAM;AAAEM,UAAAA,IAAF;AAAQG,UAAAA;AAAR,YAAkBL,MAAM,CAACI,OAA/B;AACA,cAAMG,SAAS,GAAGP,MAAM,CAACQ,YAAzB;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAWT,MAAM,CAACU,UAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCL,SAAvC;AACA,eAAO,EACH,GAAGR,KADA;AAEH,WAACG,IAAD,GAAQ,EACJ,GAAGF,MAAM,CAACI,OADN;AAEJG,YAAAA,SAAS,EAAEA,SAFP;AAGJF,YAAAA,KAAK,EAAE,EAAE,GAAGA,KAAL;AAAY,eAACI,IAAD,GAAQ,EAAE,GAAGT,MAAM,CAACU,UAAZ;AAAwBH,gBAAAA,SAAS,EAAE;AAAnC;AAApB;AAHH;AAFL,SAAP;AAQH;;AAED;AAAS,aAAOR,KAAP;AAvEb;AAyEH,CA1ED;;AA4EA,eAAeD,OAAf","sourcesContent":["import { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO } from \"../actionTypes\"\n\nconst initialState = {\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { task, date } = action.payload;\n            return {\n\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date\n                }\n\n            }\n        }\n\n        case ADD_TODO_SLAVE: {\n            const { task, steps, date } = action.payload;\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date,\n                    steps: steps\n                }\n            }\n        }\n\n        case SHOW: {\n            const { task, show } = action.payload\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    show: !show\n                }\n\n            }\n        }\n\n        case STEP_COMPLETED: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: {\n                        ...steps, [step]: { ...action.stepFinder, completed: 1 },\n                    }\n                }\n            }\n        }\n\n        case STEP_UNDO: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            console.log(\"insde reducer completed\", completed)\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: { ...steps, [step]: { ...action.stepFinder, completed: 0 } }\n                }\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}