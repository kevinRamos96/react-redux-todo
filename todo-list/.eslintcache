[{"/Users/cait02/Desktop/Begin/React/todo-list/src/index.js":"1","/Users/cait02/Desktop/Begin/React/todo-list/src/App.js":"2","/Users/cait02/Desktop/Begin/React/todo-list/src/reportWebVitals.js":"3","/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js":"4","/Users/cait02/Desktop/Begin/React/todo-list/src/components/todosublist.js":"5","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/store.js":"6","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/reducers/todoReducer.js":"7","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actionTypes.js":"8","/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js":"9","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actions.js":"10","/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js":"11","/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskCompletion.js":"12","/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskUndo.js":"13"},{"size":575,"mtime":1614030698264,"results":"14","hashOfConfig":"15"},{"size":946,"mtime":1614030354381,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611273863802,"results":"17","hashOfConfig":"15"},{"size":1677,"mtime":1614970411090,"results":"18","hashOfConfig":"15"},{"size":1807,"mtime":1615316296032,"results":"19","hashOfConfig":"15"},{"size":126,"mtime":1614030309452,"results":"20","hashOfConfig":"15"},{"size":2196,"mtime":1615315751015,"results":"21","hashOfConfig":"15"},{"size":232,"mtime":1615236026154,"results":"22","hashOfConfig":"15"},{"size":4228,"mtime":1615316238454,"results":"23","hashOfConfig":"15"},{"size":1088,"mtime":1615315712119,"results":"24","hashOfConfig":"15"},{"size":1756,"mtime":1615316190678,"results":"25","hashOfConfig":"15"},{"size":1406,"mtime":1615234392800,"results":"26","hashOfConfig":"15"},{"size":377,"mtime":1615237340446,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"pwmhm8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/cait02/Desktop/Begin/React/todo-list/src/index.js",[],["60","61"],"/Users/cait02/Desktop/Begin/React/todo-list/src/App.js",["62","63","64"],"import './App.css';\nimport React, { Component, useState } from \"react\"\nimport TodoList from './components/todolist'\n\nconst App = () => {\n\n  const todo =\n    [{\n      task: \"firts\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"second\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"third\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: []\n    }]\n\n  const [state, setState] = useState(todo)\n  console.log(\"state\", state)\n  let container = TodoList(state)\n  console.log(\"debug\", container)\n\n  return container;\n\n}\n\n\nexport default App;\n","/Users/cait02/Desktop/Begin/React/todo-list/src/reportWebVitals.js",[],"/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js",["65","66","67","68","69","70"],"import React, { Component, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nimport \"../App.css\"\n\n\nconst TodoList = (props) => {\n    //set up state from app.js\n\n    const dispatch = useDispatch()\n    const selec = useSelector(state => state)\n    console.log(\"using selector\", selec)\n    console.log(\"using selector len\", Object.keys(selec))\n\n    const result = props.map(input => {\n        let holder = { task: input.task, status: false }\n        return holder\n    })\n    const [butState, setBut] = useState(props)\n    console.log('result', result)\n    console.log('butState', butState)\n\n    //Lets return a div with ul with what is inside the state\n\n\n\n    function setter(input) {\n        let vari = butState.map(finder => {\n            if (finder.task == input) {\n                return { ...finder, show: !finder.show }\n            }\n            return finder\n        })\n        console.log(\"vari\", vari)\n        return vari\n    }\n    function showSteps(input) {\n        console.log(\"getting input\", input)\n        let newButS = setter(input)\n        console.log('before click', butState)\n        console.log('input', butState.first)\n        setBut(newButS)\n        console.log('after click', butState)\n\n    }\n\n\n\n\n\n\n\n\n\n\n    let content = (\n        <div>\n            <ul>\n                <div>\n                    <CreateTask />\n                    <ShowListItem />\n                </div>\n\n\n            </ul>\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;","/Users/cait02/Desktop/Begin/React/todo-list/src/components/todosublist.js",["71","72","73","74"],"/Users/cait02/Desktop/Begin/React/todo-list/src/redux/store.js",[],"/Users/cait02/Desktop/Begin/React/todo-list/src/redux/reducers/todoReducer.js",["75"],"import { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO } from \"../actionTypes\"\n\nconst initialState = {\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { task, date } = action.payload;\n            return {\n\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date\n                }\n\n            }\n        }\n\n        case ADD_TODO_SLAVE: {\n            const { task, steps, date } = action.payload;\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date,\n                    steps: steps\n                }\n            }\n        }\n\n        case SHOW: {\n            const { task, show } = action.payload\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    show: !show\n                }\n\n            }\n        }\n\n        case STEP_COMPLETED: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: {\n                        ...steps, [step]: { ...action.stepFinder, completed: 1 },\n                    }\n                }\n            }\n        }\n\n        case STEP_UNDO: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            console.log(\"insde reducer completed\", completed)\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: { ...steps, [step]: { ...action.stepFinder, completed: 0 } }\n                }\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport default reducer","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actionTypes.js",[],"/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js",["76","77","78"],"/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actions.js",["79"],"import { ADD_TODO, SHOW, COMPLETED, ADD_TODO_SLAVE, STEP_COMPLETED, STEP_UNDO } from \"./actionTypes\"\n\nexport const addTodo = content => ({\n    type: ADD_TODO,\n    payload: {\n        task: content,\n        dateB: \"1/1/1\",\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n\n    }\n})\n//addTodo slave to create steps from addTodo\nexport const addTodoSlave = (content, contentSteps, date) => ({\n    type: ADD_TODO_SLAVE,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n})\n\nexport const toogleShow = item => ({\n    type: SHOW,\n    payload: item\n})\n\nexport const stepCompleted = (item, itemStep, itemCompleted) => ({\n    type: STEP_COMPLETED,\n    payload: item,\n    stepFinder: itemStep, //temp properity folder for the substep index\n    newCompleted: itemCompleted\n})\n\nexport const stepUndo = (item, itemStep, itemCompleted) => ({\n    type: STEP_UNDO,\n    payload: item,\n    stepFinder: itemStep,\n    newCompleted: itemCompleted\n})\n","/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js",["80","81"],"/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskCompletion.js",["82","83","84","85","86","87"],"import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nconst taskCompletion = (parent, child) => {\n    let index = 0, counter = 1, result = 0\n    Object.keys(child).map(input => {\n        //index counts the number of steps, while counter the number of completed steps\n        index = index + 1\n        /** We know that every time we dispatch we have completed a step therfore we need to\n         * take in account that our counter(steps completed) should start in 1 however it\n         * cannot exceeed the length of the number steps therefore we set the counter to be \n         * less than the number of steps if not on the last render it will make the widht >100%\n         */\n        if (child[input].completed > 0 && counter < Object.keys(child).length) {\n            counter = (counter + 1)\n            console.log(\"result for counter\", counter)\n\n        }\n    })\n    if (counter > 0) {\n        result = (counter / index)\n        console.log(\"result for new state\", result)\n        return result\n    }\n    console.log(\"result for index\", index)\n\n    console.log(\"result for new state\", result)\n    //base case when taskCompletion gets called we assumed that 1 step was already completed therefore\n    //we need to account for it by doing 1(completedtask)/index(number of steps)\n}\n\nexport default taskCompletion","/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskUndo.js",["88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},{"ruleId":"93","severity":1,"message":"97","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"98","line":45,"column":17,"nodeType":"95","messageId":"96","endLine":45,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"99","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":19},{"ruleId":"93","severity":1,"message":"100","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":20},{"ruleId":"93","severity":1,"message":"101","line":14,"column":11,"nodeType":"95","messageId":"96","endLine":14,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":33,"column":29,"nodeType":"104","messageId":"105","endLine":33,"endColumn":31},{"ruleId":"93","severity":1,"message":"106","line":41,"column":14,"nodeType":"95","messageId":"96","endLine":41,"endColumn":23},{"ruleId":"93","severity":1,"message":"97","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"107","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":12},{"ruleId":"93","severity":1,"message":"108","line":3,"column":25,"nodeType":"95","messageId":"96","endLine":3,"endColumn":38},{"ruleId":"93","severity":1,"message":"109","line":4,"column":23,"nodeType":"95","messageId":"96","endLine":4,"endColumn":34},{"ruleId":"93","severity":1,"message":"110","line":1,"column":58,"nodeType":"95","messageId":"96","endLine":1,"endColumn":67},{"ruleId":"93","severity":1,"message":"97","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":19},{"ruleId":"93","severity":1,"message":"111","line":1,"column":31,"nodeType":"95","messageId":"96","endLine":1,"endColumn":40},{"ruleId":"93","severity":1,"message":"109","line":2,"column":23,"nodeType":"95","messageId":"96","endLine":2,"endColumn":34},{"ruleId":"93","severity":1,"message":"110","line":1,"column":26,"nodeType":"95","messageId":"96","endLine":1,"endColumn":35},{"ruleId":"93","severity":1,"message":"97","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":19},{"ruleId":"93","severity":1,"message":"112","line":1,"column":21,"nodeType":"95","messageId":"96","endLine":1,"endColumn":29},{"ruleId":"93","severity":1,"message":"97","line":1,"column":10,"nodeType":"95","messageId":"96","endLine":1,"endColumn":19},{"ruleId":"93","severity":1,"message":"112","line":1,"column":21,"nodeType":"95","messageId":"96","endLine":1,"endColumn":29},{"ruleId":"93","severity":1,"message":"113","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"109","line":2,"column":23,"nodeType":"95","messageId":"96","endLine":2,"endColumn":34},{"ruleId":"93","severity":1,"message":"100","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":7,"column":34,"nodeType":"116","messageId":"117","endLine":7,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":3,"column":34,"nodeType":"116","messageId":"117","endLine":3,"endColumn":36},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'setState' is assigned a value but never used.","'TodoSubList' is defined but never used.","'toogleShow' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'showSteps' is defined but never used.","'Grid' is defined but never used.","'taskCompleted' is defined but never used.","'useSelector' is defined but never used.","'COMPLETED' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]