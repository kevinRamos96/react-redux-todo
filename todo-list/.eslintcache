[{"/Users/cait02/Desktop/Begin/React/todo-list/src/index.js":"1","/Users/cait02/Desktop/Begin/React/todo-list/src/App.js":"2","/Users/cait02/Desktop/Begin/React/todo-list/src/reportWebVitals.js":"3","/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js":"4","/Users/cait02/Desktop/Begin/React/todo-list/src/components/todosublist.js":"5","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/store.js":"6","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/reducers/todoReducer.js":"7","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actionTypes.js":"8","/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js":"9","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actions.js":"10","/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js":"11","/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskCompletion.js":"12","/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskUndo.js":"13","/Users/cait02/Desktop/Begin/React/todo-list/src/components/getDataAPI.js":"14","/Users/cait02/Desktop/Begin/React/todo-list/src/components/createCollection.js":"15"},{"size":575,"mtime":1614030698264,"results":"16","hashOfConfig":"17"},{"size":1656,"mtime":1617305613005,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1611273863802,"results":"19","hashOfConfig":"17"},{"size":4197,"mtime":1617317166770,"results":"20","hashOfConfig":"17"},{"size":1890,"mtime":1616525640307,"results":"21","hashOfConfig":"17"},{"size":198,"mtime":1615934358786,"results":"22","hashOfConfig":"17"},{"size":3062,"mtime":1617316769807,"results":"23","hashOfConfig":"17"},{"size":396,"mtime":1617299272874,"results":"24","hashOfConfig":"17"},{"size":5691,"mtime":1617301124982,"results":"25","hashOfConfig":"17"},{"size":4637,"mtime":1617299349090,"results":"26","hashOfConfig":"17"},{"size":2369,"mtime":1617304279393,"results":"27","hashOfConfig":"17"},{"size":1407,"mtime":1616525281522,"results":"28","hashOfConfig":"17"},{"size":378,"mtime":1616525322900,"results":"29","hashOfConfig":"17"},{"size":495,"mtime":1616445520518,"results":"30","hashOfConfig":"17"},{"size":538,"mtime":1617135188812,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pwmhm8",{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},"/Users/cait02/Desktop/Begin/React/todo-list/src/index.js",[],"/Users/cait02/Desktop/Begin/React/todo-list/src/App.js",["70","71","72","73"],"/Users/cait02/Desktop/Begin/React/todo-list/src/reportWebVitals.js",[],"/Users/cait02/Desktop/Begin/React/todo-list/src/components/todolist.js",["74","75","76","77","78"],"/Users/cait02/Desktop/Begin/React/todo-list/src/components/todosublist.js",["79","80","81","82"],"import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport { stepCompleted, taskCompleted, stepUndo } from \"../redux/actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport taskCompletion from \"./taskCompletion\"\nimport taskUndo from \"./taskUndo\"\nimport \"../App.css\"\n\n\n\nconst TodoSubList = ({ propsParent, props }) => {\n    const dispatch = useDispatch()\n    console.log(\"props\", props)\n\n    if (Object.keys(props).length >= 1) {\n        let container =\n            Object.keys(props).map(input =>\n\n                <div className='container'>\n                    {console.log(\"propsStep\", props[input].step)}\n\n                    <div className=\"subitem1-container \">\n                        {props[input].step}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        {props[input].dateBS}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        <div className=\"filler\" style={{ width: `${props[input].completedS * 100}%` }}>\n                            {console.log(\"completedS\", props[input].completedS)}\n                        </div>\n                    </div>\n\n                    <div className=\"subitem1-container \">\n                        {props[input].completedS ?\n                            <button type=\"submit\" onClick={() => dispatch(stepUndo(propsParent, props[input], taskUndo(propsParent, props)))}>Undo</button>\n\n                            :\n                            <button type=\"submit\" onClick={() => dispatch(stepCompleted(propsParent, props[input], taskCompletion(propsParent, props)))}>Complete</button>\n\n                        }\n\n                    </div>\n\n                </div>\n            )\n        console.log(\"returning\")\n        return container\n    }\n    return null\n}\n\n\n\nexport default TodoSubList;",["83","84"],"/Users/cait02/Desktop/Begin/React/todo-list/src/redux/store.js",[],"/Users/cait02/Desktop/Begin/React/todo-list/src/redux/reducers/todoReducer.js",["85","86","87","88"],"/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actionTypes.js",[],"/Users/cait02/Desktop/Begin/React/todo-list/src/components/createTask.js",["89","90"],"import { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave, getTask, postTaskSteps } from \"../redux/actions\"\nimport { postTask } from \"../redux/actions\";\nimport '../css/modal.css'\n\nconst CreateTask = (props) => {\n    const [task, setTask] = useState(null)\n    const [subT, setSubT] = useState(null)\n    const [subList, setSubList] = useState(\"\")\n    const [butState, setButState] = useState(false)\n    const [categoryData, setCategoryData] = useState(\"\")\n    const dispatch = useDispatch()\n    const testState = useSelector(state => state)\n    console.log(\"testState\", testState)\n    const date = new Date()\n    const taskDate = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n\n    const formCategory = (e) => {\n        console.log(\"category\", categoryData);\n        setCategoryData(e.target.value);\n    }\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n\n    //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n    const addSubTask = () => {\n\n        if (subList === null) {\n            setSubList({\n                [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"if addSubTask\", subList)\n            setSubT(\"\")\n            console.log(\"ifsubt\", subT)\n\n        }\n\n        else {\n            console.log(\"else\", subT)\n            console.log(\"else addSubTask\", subList)\n            setSubList({\n                ...subList, [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"subList\", subList)\n            setSubT(\"\")\n\n        }\n\n\n\n\n    }\n\n    const dispatchAddTodo = () => {\n        dispatch(addTodo(task, taskDate))\n        dispatch(postTask(task, taskDate))\n        dispatch(getTask())\n    }\n    //Set state for task and subList to null\n    const dispatchAddTodoSlave = () => {\n        dispatch(addTodoSlave(categoryData, task, subList, taskDate))\n        dispatch(postTaskSteps(categoryData, task, taskDate, subList))\n        setTask(\"\");\n        setSubList(\"\");\n        setButState(false)\n        setCategoryData(\"\");\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n    //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n    const deleteSubTask = (input) => {\n        console.log(\"deleting step\", input)\n        const newSubList = Object.keys(subList).reduce((object, helper) => {\n            if (subList[helper] !== input) {\n                console.log(\"sublist\", subList[helper])\n                object[helper] = subList[helper]\n            }\n            return object\n        }, {}\n        )\n        console.log(\"newSubList\", newSubList)\n        setSubList(newSubList)\n        console.log(\"subListFromDelete\", subList)\n    }\n\n    let container = (<div className=\"box\">\n        <div className=\"close-icon\" onClick={props.closeModal}>X</div>\n        {!butState ? <>\n            <div className=\"boxTitle\">\n                <input value={task} onChange={(e) => formTask(e)}></input>\n            </div>\n            <div className=\"buttonBox\">\n                <button type='submit' onClick={() => dispatchAddTodo()}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n            </div>\n\n        </>\n            :\n            <>\n                <div className=\"boxTitle\">\n                    <input value={task} onChange={(e) => formTask(e)}></input>\n                    <input value={categoryData} onChange={(e) => formCategory(e)}></input>\n\n                    {subList === null ?\n                        <>\n                            {console.log(\"inside true sublist\")}\n                            <div className=\"box-Title-inside\">\n                                <input value={subT} onChange={(e) => formSubt(e)}></input>\n                                <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                            </div>\n\n                        </>\n                        :\n                        <>\n                            <>\n                                {Object.keys(subList).map(input => <div className=\"box-Title-inside\">\n                                    <input readOnly value={subList[input].step}></input>\n                                    <button type=\"submit\" onClick={() => deleteSubTask(subList[input])}>Delete Step</button>\n                                </div>)}\n                                <div className=\"box-Title-inside\">\n                                    <input value={subT} onChange={(e) => formSubt(e)}></input>\n                                    <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                                </div>\n                            </>\n                        </>\n                    }\n                </div>\n                <div className=\"buttonBox\">\n                    <button type='submit' onClick={() => dispatchAddTodoSlave()}>Add Task</button>\n                    <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                </div>\n            </>}\n\n\n        <br></br>\n\n    </div>)\n\n    return container\n\n\n}\n\nexport default CreateTask","/Users/cait02/Desktop/Begin/React/todo-list/src/redux/actions.js",["91","92","93","94","95","96","97"],"/Users/cait02/Desktop/Begin/React/todo-list/src/components/showListItems.js",["98","99","100","101","102"],"import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getStateFromApi, getTask, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = (props) => {\n    const dispatch = useDispatch()\n\n    const tempState = useSelector(state => state)\n    const selector = tempState[props.category]\n    console.log(\"props category\", props.category)\n    console.log(\"selector state\", selector)\n    console.log(\"props category array\", selector[props.category])\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(toogleShowAPI(input))\n        console.log(\"input show\", input)\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    <div className=\"container\">\n                        <div className=\"item2\">{selector[input].task}\n                            <div className=\"button-class\">\n                                <button type='submit' onClick={() => (toogleUpdate(selector[input]))}  >ShowSteps</button>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateB}</div>\n                        <div className=\"item2\">\n                            <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateE}</div>\n                    </div>\n                    {console.log(\"input.date\", selector[input].dateB)}\n                    {console.log(\"input.steps\", selector[input].steps)}\n\n                    <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                    </div>\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem","/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskCompletion.js",["103","104","105","106","107","108"],"import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nconst taskCompletion = (parent, child) => {\n    let index = 0, counter = 1, result = 0\n    Object.keys(child).map(input => {\n        //index counts the number of steps, while counter the number of completed steps\n        index = index + 1\n        /** We know that every time we dispatch we have completed a step therfore we need to\n         * take in account that our counter(steps completed) should start in 1 however it\n         * cannot exceeed the length of the number steps therefore we set the counter to be \n         * less than the number of steps if not on the last render it will make the widht >100%\n         */\n        if (child[input].completedS > 0 && counter < Object.keys(child).length) {\n            counter = (counter + 1)\n            console.log(\"result for counter\", counter)\n\n        }\n    })\n    if (counter > 0) {\n        result = (counter / index)\n        console.log(\"result for new state\", result)\n        return result\n    }\n    console.log(\"result for index\", index)\n\n    console.log(\"result for new state\", result)\n    //base case when taskCompletion gets called we assumed that 1 step was already completed therefore\n    //we need to account for it by doing 1(completedtask)/index(number of steps)\n}\n\nexport default taskCompletion","/Users/cait02/Desktop/Begin/React/todo-list/src/components/taskUndo.js",["109"],"const taskUndo = (parent, child) => {\n    let index = 0, counter = Object.keys(child).length - 1, result = 0\n    Object.keys(child).map(input => {\n        index++\n        if (child[input].completedS === 0 && counter > -1) {\n            counter -= 1\n        }\n    })\n    result = counter / index\n    console.log(\"new result \", result)\n    return result\n}\n\nexport default taskUndo","/Users/cait02/Desktop/Begin/React/todo-list/src/components/getDataAPI.js",["110"],"import { useDispatch, useSelector } from 'react-redux'\nimport { getTask } from '../redux/actions'\n\nconst GetDataFromAPI = () => {\n    const dispatch = useDispatch()\n    // const selector = useSelector(state => state)\n    //create redux state if there is data on the dB\n    dispatch(getTask())\n    //console.log(\"getDataAPI.js Data\", data)\n    // data.map(input => console.log(\"data input map\", input))\n    //console.log(\"getDataAPI.js\", selector)\n    return null\n}\n\nexport default GetDataFromAPI","/Users/cait02/Desktop/Begin/React/todo-list/src/components/createCollection.js",["111","112"],"import React, { Component, useState } from \"react\"\nimport '../css/modal.css'\n\nconst CreateCollection = (props) => {\n    return (\n        <div className=\"popUp\">\n            <div className=\"box\">\n                <div className=\"close-icon\" onClick={props.closeModal}>x</div>\n                <div className=\"boxTitle\">Type Name of New Table\n                </div>\n                <div className=\"boxTitle\">\n                    {props.content}\n                </div>\n\n            </div>\n        </div>\n    )\n}\nexport default CreateCollection",{"ruleId":"113","severity":1,"message":"114","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":26},{"ruleId":"113","severity":1,"message":"117","line":8,"column":9,"nodeType":"115","messageId":"116","endLine":8,"endColumn":13},{"ruleId":"113","severity":1,"message":"118","line":48,"column":9,"nodeType":"115","messageId":"116","endLine":48,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":52,"column":61,"nodeType":"121","messageId":"122","endLine":52,"endColumn":62,"fix":"123"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"124","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":37},{"ruleId":"113","severity":1,"message":"125","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":19},{"ruleId":"113","severity":1,"message":"126","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":21},{"ruleId":"113","severity":1,"message":"127","line":12,"column":18,"nodeType":"115","messageId":"116","endLine":12,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"128","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":12},{"ruleId":"113","severity":1,"message":"129","line":3,"column":25,"nodeType":"115","messageId":"116","endLine":3,"endColumn":38},{"ruleId":"113","severity":1,"message":"130","line":4,"column":23,"nodeType":"115","messageId":"116","endLine":4,"endColumn":34},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"113","severity":1,"message":"135","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"113","severity":1,"message":"136","line":2,"column":26,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"113","severity":1,"message":"137","line":2,"column":58,"nodeType":"115","messageId":"116","endLine":2,"endColumn":67},{"ruleId":"113","severity":1,"message":"138","line":2,"column":80,"nodeType":"115","messageId":"116","endLine":2,"endColumn":89},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"113","severity":1,"message":"124","line":1,"column":31,"nodeType":"115","messageId":"116","endLine":1,"endColumn":40},{"ruleId":"113","severity":1,"message":"137","line":1,"column":26,"nodeType":"115","messageId":"116","endLine":1,"endColumn":35},{"ruleId":"113","severity":1,"message":"138","line":1,"column":80,"nodeType":"115","messageId":"116","endLine":1,"endColumn":89},{"ruleId":"113","severity":1,"message":"139","line":1,"column":91,"nodeType":"115","messageId":"116","endLine":1,"endColumn":105},{"ruleId":"113","severity":1,"message":"126","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":51,"column":25,"nodeType":"142","messageId":"143","endLine":51,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":53,"column":28,"nodeType":"146","messageId":"147","endLine":53,"endColumn":30},{"ruleId":"113","severity":1,"message":"148","line":130,"column":11,"nodeType":"115","messageId":"116","endLine":130,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"113","severity":1,"message":"149","line":1,"column":21,"nodeType":"115","messageId":"116","endLine":1,"endColumn":29},{"ruleId":"113","severity":1,"message":"150","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":25},{"ruleId":"113","severity":1,"message":"151","line":3,"column":27,"nodeType":"115","messageId":"116","endLine":3,"endColumn":34},{"ruleId":"113","severity":1,"message":"152","line":3,"column":63,"nodeType":"115","messageId":"116","endLine":3,"endColumn":76},{"ruleId":"113","severity":1,"message":"114","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"113","severity":1,"message":"149","line":1,"column":21,"nodeType":"115","messageId":"116","endLine":1,"endColumn":29},{"ruleId":"113","severity":1,"message":"126","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"113","severity":1,"message":"130","line":2,"column":23,"nodeType":"115","messageId":"116","endLine":2,"endColumn":34},{"ruleId":"113","severity":1,"message":"153","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":7,"column":34,"nodeType":"142","messageId":"143","endLine":7,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":3,"column":34,"nodeType":"142","messageId":"143","endLine":3,"endColumn":36},{"ruleId":"113","severity":1,"message":"130","line":1,"column":23,"nodeType":"115","messageId":"116","endLine":1,"endColumn":34},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"149","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'todo' is assigned a value but never used.","'fetch' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"154","text":"155"},"'useEffect' is defined but never used.","'TodoSubList' is defined but never used.","'useDispatch' is defined but never used.","'setData' is assigned a value but never used.","'Grid' is defined but never used.","'taskCompleted' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'axios' is defined but never used.","'ADD_TODO_SLAVE' is defined but never used.","'COMPLETED' is defined but never used.","'POST_TASK' is defined but never used.","'POST_TASK_SUCC' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'state' is assigned a value but never used.","'useState' is defined but never used.","'getStateFromApi' is defined but never used.","'getTask' is defined but never used.","'updateShowAPI' is defined but never used.","'toogleShow' is defined but never used.",[1350,1358],"\n      .","no-global-assign","no-unsafe-negation"]