{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/taskCompletion.js","components/taskUndo.js","components/todosublist.js","components/showListItems.js","components/createTask.js","components/getDataAPI.js","components/todolist.js","App.js","reportWebVitals.js","redux/reducers/todoReducer.js","redux/store.js","index.js"],"names":["ADD_TODO","SHOW","STEP_COMPLETED","STEP_UNDO","ADD_STATE","getTask","dispatch","getState","a","console","log","axios","get","then","res","input","data","map","value","task","undefined","type","payload","taskCompletion","parent","child","index","counter","result","Object","keys","completedS","length","taskUndo","TodoSubList","propsParent","props","useDispatch","container","className","step","dateBS","style","width","onClick","item","itemStep","itemCompleted","state","put","status","stepFinder","newCompleted","ShowListItem","selector","useSelector","toogleUpdate","id","reduce","object","helper","toogleShowAPI","dateB","completed","dateE","steps","show","CreateTask","useState","setTask","subT","setSubT","subList","setSubList","butState","setButState","testState","date","Date","taskDate","getMonth","getDate","getFullYear","formTask","e","target","formSubt","addSubTask","dispatchAddTodo","content","addTodo","tasks","post","postTask","dispatchAddTodoSlave","contentSteps","addTodoSlave","postTaskSteps","butSet","onChange","readOnly","newSubList","deleteSubTask","GetDataFromAPI","TodoList","App","miniT","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","createStore","todoReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.5f3804f7.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const ADD_TODO_SLAVE = \"ADD_TODO_SLAVE\";\nexport const COMPLETED = \"COMPLETED\";\nexport const SHOW = \"SHOW\"\nexport const STEP_COMPLETED = \"STEP_COMPLETED\"\nexport const STEP_UNDO = \"STEP_UNDO\"\nexport const POST_TASK = \"POST_TASK\"\nexport const POST_TASK_SUCC = \"POST_TASK_SUCC\"\nexport const ADD_STATE = \"ADD_STATE\"","import { ADD_TODO, SHOW, COMPLETED, ADD_TODO_SLAVE, STEP_COMPLETED, STEP_UNDO, POST_TASK, POST_TASK_SUCC, ADD_STATE } from \"./actionTypes\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\n\nexport const addTodo = (content, date) => ({\n    type: ADD_TODO,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n\n    }\n\n})\n\nexport const postTask = (content, date) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://192.168.22.27:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", tasks)\n            console.log(\"resdata post\", res.data)\n            dispatch({ type: ADD_STATE, payload: tasks })\n        })\n\n}\n\n\nexport const getStateFromApi = (input) => ({\n    type: ADD_STATE,\n    payload: input\n})\nconst createMap = (input) => (dispatch) => {\n    console.log(\"createMap\", input)\n    if (input != null) {\n        input.map(value => {\n            console.log(\"value.task\", value.task)\n            if (value.task != undefined) {\n                dispatch({ type: ADD_STATE, payload: value })\n            }\n        })\n    }\n}\nexport const getTask = () => async (dispatch, getState) => {\n    console.log(\"insideapi getTASK\")\n    await axios.get(\"http://192.168.22.27:8080/api/\")\n        .then(res => {\n            dispatch(createMap(res.data))\n\n        })\n}\n\nexport const updateShowAPI = (input) => (dispatch, getState) => {\n    console.log(\"updateshow API\", getState)\n}\n\nexport const postTaskSteps = (content, date, contentSteps) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://192.168.22.27:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", res)\n            console.log(\"resdata\", res.data)\n            dispatch({ type: ADD_STATE, payload: tasks })\n\n        })\n\n}\n//addTodo slave to create steps from addTodo\nexport const addTodoSlave = (content, contentSteps, date) => ({\n    type: ADD_TODO_SLAVE,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n})\n\nexport const toogleShow = item => ({\n    type: SHOW,\n    payload: item\n})\n\nexport const toogleShowAPI = (item) => (dispatch, getState) => {\n    const state = getState()\n    const id = item.task\n    console.log(\"toogleShowAPI\", state)\n    console.log(\"toogleShowAPI\", item.task)\n    const task = Object.keys(state).reduce((object, helper) => {\n        if (state[helper].task === item.task) {\n            object[helper] = state[helper]\n            console.log(\"inside reducer\", object[helper])\n        }\n        return object\n    }, {})\n    console.log(\"task to PUT\", task)\n    axios.put(\"http://192.168.22.27:8080/api/\" + id, task)\n        .then(res => console.log(\"res from PUT\", res))\n}\n\nexport const stepCompletedAPI = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n    const state = itemCompleted;\n    console.log(\"itemCompleted\", itemCompleted)\n\n}\n\nexport const stepCompleted = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n\n    const state = itemStep.step;\n    console.log(\"STEP Completed\", itemStep)\n    axios.put(\"http://192.168.22.27:8080/api/\" + item.task + \"/\" + state, item)\n        .then(res => {\n            console.log(\"response for step undo\", res.status)\n            dispatch({\n                type: STEP_COMPLETED,\n                payload: item,\n                stepFinder: itemStep,\n                newCompleted: itemCompleted\n            })\n        })\n}\n\nexport const stepUndo = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n    const state = itemStep.step;\n    console.log(\"STEP UNDO\", itemStep.step)\n\n    axios.put(\"http://192.168.22.27:8080/api/\" + item.task + \"/\" + state, item)\n        .then(res => {\n            console.log(\"response for step undo\", res.status)\n            dispatch({\n                type: STEP_UNDO,\n                payload: item,\n                stepFinder: itemStep,\n                newCompleted: itemCompleted\n            })\n        })\n\n\n}\n","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nconst taskCompletion = (parent, child) => {\n    let index = 0, counter = 1, result = 0\n    Object.keys(child).map(input => {\n        //index counts the number of steps, while counter the number of completed steps\n        index = index + 1\n        /** We know that every time we dispatch we have completed a step therfore we need to\n         * take in account that our counter(steps completed) should start in 1 however it\n         * cannot exceeed the length of the number steps therefore we set the counter to be \n         * less than the number of steps if not on the last render it will make the widht >100%\n         */\n        if (child[input].completedS > 0 && counter < Object.keys(child).length) {\n            counter = (counter + 1)\n            console.log(\"result for counter\", counter)\n\n        }\n    })\n    if (counter > 0) {\n        result = (counter / index)\n        console.log(\"result for new state\", result)\n        return result\n    }\n    console.log(\"result for index\", index)\n\n    console.log(\"result for new state\", result)\n    //base case when taskCompletion gets called we assumed that 1 step was already completed therefore\n    //we need to account for it by doing 1(completedtask)/index(number of steps)\n}\n\nexport default taskCompletion","const taskUndo = (parent, child) => {\n    let index = 0, counter = Object.keys(child).length - 1, result = 0\n    Object.keys(child).map(input => {\n        index++\n        if (child[input].completedS === 0 && counter > -1) {\n            counter -= 1\n        }\n    })\n    result = counter / index\n    console.log(\"new result \", result)\n    return result\n}\n\nexport default taskUndo","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport { stepCompleted, taskCompleted, stepUndo } from \"../redux/actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport taskCompletion from \"./taskCompletion\"\nimport taskUndo from \"./taskUndo\"\nimport \"../App.css\"\n\n\n\nconst TodoSubList = ({ propsParent, props }) => {\n    const dispatch = useDispatch()\n    console.log(\"props\", props)\n\n    if (Object.keys(props).length >= 1) {\n        let container =\n            Object.keys(props).map(input =>\n\n                <div className='container'>\n                    {console.log(\"propsStep\", props[input].step)}\n\n                    <div className=\"subitem1-container \">\n                        {props[input].step}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        {props[input].dateBS}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        <div className=\"filler\" style={{ width: `${props[input].completedS * 100}%` }}>\n                            {console.log(\"completedS\", props[input].completedS)}\n                        </div>\n                    </div>\n\n                    <div className=\"subitem1-container \">\n                        {props[input].completedS ?\n                            <button type=\"submit\" onClick={() => dispatch(stepUndo(propsParent, props[input], taskUndo(propsParent, props)))}>Undo</button>\n\n                            :\n                            <button type=\"submit\" onClick={() => dispatch(stepCompleted(propsParent, props[input], taskCompletion(propsParent, props)))}>Complete</button>\n\n                        }\n\n                    </div>\n\n                </div>\n            )\n        console.log(\"returning\")\n        return container\n    }\n    return null\n}\n\n\n\nexport default TodoSubList;","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getStateFromApi, getTask, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = () => {\n    const dispatch = useDispatch()\n\n    const selector = useSelector(state => state)\n    console.log(\"selector\", selector)\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(toogleShowAPI(input))\n        console.log(\"input show\", input)\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    <div className=\"container\">\n                        <div className=\"item2\">{selector[input].task}\n                            <div className=\"button-class\">\n                                <button type='submit' onClick={() => (toogleUpdate(selector[input]))}  >ShowSteps</button>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateB}</div>\n                        <div className=\"item2\">\n                            <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateE}</div>\n                    </div>\n                    {console.log(\"input.date\", selector[input].dateB)}\n                    {console.log(\"input.steps\", selector[input].steps)}\n\n                    <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                    </div>\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem","import { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave, getTask, postTaskSteps } from \"../redux/actions\"\nimport { postTask } from \"../redux/actions\";\n\nconst CreateTask = () => {\n    const [task, setTask] = useState(null)\n    const [subT, setSubT] = useState(null)\n    const [subList, setSubList] = useState(\"\")\n    const [butState, setButState] = useState(false)\n    const dispatch = useDispatch()\n    const testState = useSelector(state => state)\n    console.log(\"testState\", testState)\n    const date = new Date()\n    const taskDate = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n\n    //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n    const addSubTask = () => {\n\n        if (subList === null) {\n            setSubList({\n                [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"if addSubTask\", subList)\n            setSubT(\"\")\n            console.log(\"ifsubt\", subT)\n\n        }\n\n        else {\n            console.log(\"else\", subT)\n            console.log(\"else addSubTask\", subList)\n            setSubList({\n                ...subList, [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"subList\", subList)\n            setSubT(\"\")\n\n        }\n\n\n\n\n    }\n\n    const dispatchAddTodo = () => {\n        dispatch(addTodo(task, taskDate))\n        dispatch(postTask(task, taskDate))\n        dispatch(getTask())\n    }\n    //Set state for task and subList to null\n    const dispatchAddTodoSlave = () => {\n        dispatch(addTodoSlave(task, subList, taskDate))\n        dispatch(postTaskSteps(task, taskDate, subList))\n        setTask(\"\");\n        setSubList(\"\");\n        setButState(false)\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n    //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n    const deleteSubTask = (input) => {\n        console.log(\"deleting step\", input)\n        const newSubList = Object.keys(subList).reduce((object, helper) => {\n            if (subList[helper] !== input) {\n                console.log(\"sublist\", subList[helper])\n                object[helper] = subList[helper]\n            }\n            return object\n        }, {}\n        )\n        console.log(\"newSubList\", newSubList)\n        setSubList(newSubList)\n        console.log(\"subListFromDelete\", subList)\n    }\n\n    let container = (<div>\n        {!butState ? <div>\n            <input value={task} onChange={(e) => formTask(e)}></input>\n            <button type='submit' onClick={() => dispatchAddTodo()}>Add Task</button>\n            <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n        </div>\n            :\n            <div>\n                <input value={task} onChange={(e) => formTask(e)}></input>\n                <button type='submit' onClick={() => dispatchAddTodoSlave()}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                {subList === null ?\n                    <div>\n                        {console.log(\"inside true sublist\")}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                    :\n                    <div>\n                        {Object.keys(subList).map(input => <div>\n                            <input readOnly value={subList[input].step}></input>\n                            <button type=\"submit\" onClick={() => deleteSubTask(subList[input])}>Delete Step</button>\n                        </div>)}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                }\n            </div>}\n\n\n        <br></br>\n\n    </div >)\n\n    return container\n\n\n}\n\nexport default CreateTask","import { useDispatch, useSelector } from 'react-redux'\nimport { getTask } from '../redux/actions'\n\nconst GetDataFromAPI = () => {\n    const dispatch = useDispatch()\n    // const selector = useSelector(state => state)\n    //create redux state if there is data on the dB\n    dispatch(getTask())\n    //console.log(\"getDataAPI.js Data\", data)\n    // data.map(input => console.log(\"data input map\", input))\n    //console.log(\"getDataAPI.js\", selector)\n    return null\n}\n\nexport default GetDataFromAPI","import React, { Component, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\nimport GetDataFromAPI from \"./getDataAPI\"\n\nimport \"../App.css\"\n\n\n\nconst TodoList = (props) => {\n    //set up state from app.js\n    let content = (\n        <div>\n            <ul>\n                <div className=\"main\">\n                    <div className=\"main-menu\">MENU</div>\n                    <div className=\"main-content\">\n                        <CreateTask />\n                        <ShowListItem />\n\n                    </div>\n\n                </div>\n\n\n            </ul>\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;","import './App.css';\nimport React, { Component, useState } from \"react\"\nimport TodoList from './components/todolist'\nimport GetDataFromAPI from './components/getDataAPI'\nconst App = () => {\n\n  const todo =\n    [{\n      task: \"firts\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"second\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"third\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: []\n    }]\n  //Initiate redux state if there is data saved omn DB with GETDataFromAPI() needs to only be run once at the beginning\n  //of the application if it is run other than at the beginning it casuse the app to create an infinite loop of API calls\n  //due to constantly re rendering\n  const data = GetDataFromAPI() //initiate redux state\n  const [state, setState] = useState(todo)\n  console.log(\"state\", state)\n  let container = TodoList(state)\n  console.log(\"debug\", container)\n\n  return container;\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO, POST_TASK, ADD_STATE } from \"../actionTypes\"\n\nconst initialState = {\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { task, date } = action.payload;\n            return {\n\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date\n                }\n            }\n        }\n\n        case ADD_STATE: {\n            const { task, steps, dateB } = action.payload;\n            // const task = action.payload.task\n            // const steps = action.payload.steps\n            // const dateB = action.payload.dateB\n\n            console.log(\"action.payload\", task, steps, dateB, action.payload)\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    dateB: dateB,\n                    steps: steps\n                }\n            }\n        }\n\n        case SHOW: {\n            const { task, show } = action.payload\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    show: !show\n                }\n\n            }\n        }\n\n        case STEP_COMPLETED: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: {\n                        ...steps, [step]: { ...action.stepFinder, completedS: 1 },\n                    }\n                }\n            }\n        }\n\n        case STEP_UNDO: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            console.log(\"insde reducer completed\", completed)\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: { ...steps, [step]: { ...action.stepFinder, completedS: 0 } }\n                }\n            }\n        }\n\n\n        default: return state\n    }\n\n}\n\n\n\nexport default reducer","import { createStore, applyMiddleware } from \"redux\"\nimport todoReducer from \"./reducers/todoReducer\"\nimport thunk from \"redux-thunk\"\nexport default createStore(todoReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}