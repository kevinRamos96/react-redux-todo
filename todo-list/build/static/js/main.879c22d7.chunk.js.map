{"version":3,"sources":["redux/actionTypes.js","components/taskCompletion.js","components/taskUndo.js","components/todosublist.js","redux/actions.js","components/showListItems.js","components/createTask.js","components/todolist.js","App.js","reportWebVitals.js","redux/reducers/todoReducer.js","redux/store.js","index.js"],"names":["ADD_TODO","SHOW","STEP_COMPLETED","STEP_UNDO","ADD_STATE","taskCompletion","parent","child","index","counter","result","Object","keys","map","input","completed","length","console","log","taskUndo","TodoSubList","propsParent","props","dispatch","useDispatch","container","className","step","dateB","style","width","type","onClick","item","itemStep","itemCompleted","payload","stepFinder","newCompleted","ShowListItem","apidata","getState","a","axios","get","then","res","data","selector","useSelector","state","toogleUpdate","task","dateE","steps","show","CreateTask","useState","setTask","subT","setSubT","subList","setSubList","butState","setButState","date","Date","taskDate","getDate","getMonth","getFullYear","formTask","e","target","value","formSubt","addSubTask","dateBS","completedS","dispatchAddTodo","content","addTodo","tasks","post","postTask","dispatchAddTodoSlave","contentSteps","addTodoSlave","postTaskSteps","butSet","onChange","readOnly","newSubList","reduce","object","helper","deleteSubTask","TodoList","selec","status","App","miniT","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","createStore","todoReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.879c22d7.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const ADD_TODO_SLAVE = \"ADD_TODO_SLAVE\";\nexport const COMPLETED = \"COMPLETED\";\nexport const SHOW = \"SHOW\"\nexport const STEP_COMPLETED = \"STEP_COMPLETED\"\nexport const STEP_UNDO = \"STEP_UNDO\"\nexport const POST_TASK = \"POST_TASK\"\nexport const POST_TASK_SUCC = \"POST_TASK_SUCC\"\nexport const ADD_STATE = \"ADD_STATE\"","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nconst taskCompletion = (parent, child) => {\n    let index = 0, counter = 1, result = 0\n    Object.keys(child).map(input => {\n        //index counts the number of steps, while counter the number of completed steps\n        index = index + 1\n        /** We know that every time we dispatch we have completed a step therfore we need to\n         * take in account that our counter(steps completed) should start in 1 however it\n         * cannot exceeed the length of the number steps therefore we set the counter to be \n         * less than the number of steps if not on the last render it will make the widht >100%\n         */\n        if (child[input].completed > 0 && counter < Object.keys(child).length) {\n            counter = (counter + 1)\n            console.log(\"result for counter\", counter)\n\n        }\n    })\n    if (counter > 0) {\n        result = (counter / index)\n        console.log(\"result for new state\", result)\n        return result\n    }\n    console.log(\"result for index\", index)\n\n    console.log(\"result for new state\", result)\n    //base case when taskCompletion gets called we assumed that 1 step was already completed therefore\n    //we need to account for it by doing 1(completedtask)/index(number of steps)\n}\n\nexport default taskCompletion","const taskUndo = (parent, child) => {\n    let index = 0, counter = Object.keys(child).length - 1, result = 0\n    Object.keys(child).map(input => {\n        index++\n        if (child[input].completed === 0 && counter > -1) {\n            counter -= 1\n        }\n    })\n    result = counter / index\n    console.log(\"new result \", result)\n    return result\n}\n\nexport default taskUndo","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport { stepCompleted, taskCompleted, stepUndo } from \"../redux/actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport taskCompletion from \"./taskCompletion\"\nimport taskUndo from \"./taskUndo\"\nimport \"../App.css\"\n\n\n\nconst TodoSubList = ({ propsParent, props }) => {\n    const dispatch = useDispatch()\n    console.log(\"props\", props)\n\n\n    if (Object.keys(props).length >= 1) {\n        let container =\n            Object.keys(props).map(input =>\n\n                <div className='container'>\n                    {console.log(\"propsStep\", props[input].step)}\n\n                    <div className=\"subitem1-container \">\n                        {props[input].step}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        {props[input].dateB}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        <div className=\"filler\" style={{ width: `${props[input].completed * 100}%` }}>\n                        </div>\n                    </div>\n\n                    <div className=\"subitem1-container \">\n                        {props[input].completed ?\n                            <button type=\"submit\" onClick={() => dispatch(stepUndo(propsParent, props[input], taskUndo(propsParent, props)))}>Undo</button>\n\n                            :\n                            <button type=\"submit\" onClick={() => dispatch(stepCompleted(propsParent, props[input], taskCompletion(propsParent, props)))}>Complete</button>\n\n                        }\n\n                    </div>\n\n                </div>\n            )\n        console.log(\"returning\")\n        return container\n    }\n    return null\n}\n\n\n\nexport default TodoSubList;","import { ADD_TODO, SHOW, COMPLETED, ADD_TODO_SLAVE, STEP_COMPLETED, STEP_UNDO, POST_TASK, POST_TASK_SUCC, ADD_STATE } from \"./actionTypes\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\n\nexport const addTodo = (content, date) => ({\n    type: ADD_TODO,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n\n    }\n\n})\n\nexport const postTask = (content, date) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://localhost:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", res)\n            console.log(\"resdata post\", res.data)\n        })\n\n}\n\n\nexport const getStateFromApi = (input) => ({\n    type: ADD_STATE,\n    payload: input\n})\nexport const getTask = () => async (dispatch, getState) => {\n    console.log(\"insideapi getTASK\")\n    await axios.get(\"http://localhost:8080/api/\")\n        .then(res => {\n            res.data.map(input => dispatch({ type: ADD_STATE, payload: input }))\n\n        })\n}\n\nexport const updateShowAPI = (input) => (dispatch, getState) => {\n    console.log(\"updateshow API\", getState)\n}\n\nexport const postTaskSteps = (content, date, contentSteps) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://localhost:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", res)\n            console.log(\"resdata\", res.data)\n        })\n\n}\n//addTodo slave to create steps from addTodo\nexport const addTodoSlave = (content, contentSteps, date) => ({\n    type: ADD_TODO_SLAVE,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n})\n\nexport const toogleShow = item => ({\n    type: SHOW,\n    payload: item\n})\n\nexport const stepCompleted = (item, itemStep, itemCompleted) => ({\n    type: STEP_COMPLETED,\n    payload: item,\n    stepFinder: itemStep, //temp properity folder for the substep index\n    newCompleted: itemCompleted\n})\n\nexport const stepUndo = (item, itemStep, itemCompleted) => ({\n    type: STEP_UNDO,\n    payload: item,\n    stepFinder: itemStep,\n    newCompleted: itemCompleted\n})\n","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getStateFromApi, getTask, toogleShow, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = () => {\n    const dispatch = useDispatch()\n    let apidata = dispatch(getTask())\n    console.log(\"apidata\", apidata)\n    const selector = useSelector(state => state)\n    console.log(\"selector\", selector)\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(updateShowAPI(input))\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    <div className=\"container\">\n                        <div className=\"item2\">{selector[input].task}<button type='submit' onClick={() => dispatch(toogleUpdate(selector[input]))}  >Clickhere</button></div>\n                        <div className=\"item2\">{selector[input].dateB}</div>\n                        <div className=\"item2\">\n                            <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateE}</div>\n                    </div>\n                    {console.log(\"input.date\", selector[input].dateB)}\n                    {console.log(\"input.steps\", selector[input].steps)}\n\n                    <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                    </div>\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem","import { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave, postTaskSteps } from \"../redux/actions\"\nimport { postTask } from \"../redux/actions\";\n\nconst CreateTask = () => {\n    const [task, setTask] = useState(null)\n    const [subT, setSubT] = useState(null)\n    const [subList, setSubList] = useState(\"\")\n    const [butState, setButState] = useState(false)\n    const dispatch = useDispatch()\n    const date = new Date()\n    const taskDate = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\n\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n\n    //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n    const addSubTask = () => {\n\n        if (subList === null) {\n            setSubList({\n                [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"if addSubTask\", subList)\n            setSubT(\"\")\n            console.log(\"ifsubt\", subT)\n\n        }\n\n        else {\n            console.log(\"else\", subT)\n            console.log(\"else addSubTask\", subList)\n            setSubList({\n                ...subList, [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"subList\", subList)\n            setSubT(\"\")\n\n        }\n\n\n\n\n    }\n\n    const dispatchAddTodo = () => {\n        dispatch(addTodo(task, taskDate))\n        dispatch(postTask(task, taskDate))\n    }\n    //Set state for task and subList to null\n    const dispatchAddTodoSlave = () => {\n        dispatch(addTodoSlave(task, subList, taskDate))\n        dispatch(postTaskSteps(task, taskDate, subList))\n        setTask(\"\");\n        setSubList(\"\");\n        setButState(false)\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n    //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n    const deleteSubTask = (input) => {\n        console.log(\"deleting step\", input)\n        const newSubList = Object.keys(subList).reduce((object, helper) => {\n            if (subList[helper] !== input) {\n                console.log(\"sublist\", subList[helper])\n                object[helper] = subList[helper]\n            }\n            return object\n        }, {}\n        )\n        console.log(\"newSubList\", newSubList)\n        setSubList(newSubList)\n        console.log(\"subListFromDelete\", subList)\n    }\n\n    let container = (<div>\n        {!butState ? <div>\n            <input value={task} onChange={(e) => formTask(e)}></input>\n            <button type='submit' onClick={() => dispatchAddTodo()}>Add Task</button>\n            <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n        </div>\n            :\n            <div>\n                <input value={task} onChange={(e) => formTask(e)}></input>\n                <button type='submit' onClick={() => dispatchAddTodoSlave()}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                {subList === null ?\n                    <div>\n                        {console.log(\"inside true sublist\")}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                    :\n                    <div>\n                        {Object.keys(subList).map(input => <div>\n                            <input readOnly value={subList[input].step}></input>\n                            <button type=\"submit\" onClick={() => deleteSubTask(subList[input])}>Delete Step</button>\n                        </div>)}\n                        <input value={subT} onChange={(e) => formSubt(e)}></input>\n                        <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                    </div>\n                }\n            </div>}\n\n\n        <br></br>\n\n    </div >)\n\n    return container\n\n\n}\n\nexport default CreateTask","import React, { Component, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nimport \"../App.css\"\n\n\nconst TodoList = (props) => {\n    //set up state from app.js\n\n    const dispatch = useDispatch()\n    const selec = useSelector(state => state)\n    console.log(\"using selector\", selec)\n    console.log(\"using selector len\", Object.keys(selec))\n\n    const result = props.map(input => {\n        let holder = { task: input.task, status: false }\n        return holder\n    })\n    const [butState, setBut] = useState(props)\n    console.log('result', result)\n    console.log('butState', butState)\n\n    //Lets return a div with ul with what is inside the state\n\n\n\n    function setter(input) {\n        let vari = butState.map(finder => {\n            if (finder.task == input) {\n                return { ...finder, show: !finder.show }\n            }\n            return finder\n        })\n        console.log(\"vari\", vari)\n        return vari\n    }\n    function showSteps(input) {\n        console.log(\"getting input\", input)\n        let newButS = setter(input)\n        console.log('before click', butState)\n        console.log('input', butState.first)\n        setBut(newButS)\n        console.log('after click', butState)\n\n    }\n\n\n\n\n\n\n\n\n\n\n    let content = (\n        <div>\n            <ul>\n                <div>\n                    <CreateTask />\n                    <ShowListItem />\n                </div>\n\n\n            </ul>\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;","import './App.css';\nimport React, { Component, useState } from \"react\"\nimport TodoList from './components/todolist'\n\nconst App = () => {\n\n  const todo =\n    [{\n      task: \"firts\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"second\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"third\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: []\n    }]\n\n  const [state, setState] = useState(todo)\n  console.log(\"state\", state)\n  let container = TodoList(state)\n  console.log(\"debug\", container)\n\n  return container;\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO, POST_TASK, ADD_STATE } from \"../actionTypes\"\n\nconst initialState = {\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { task, date } = action.payload;\n            return {\n\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date\n                }\n            }\n        }\n\n        case ADD_STATE: {\n            const { task, steps, dateB } = action.payload;\n            // const task = action.payload.task\n            // const steps = action.payload.steps\n            // const dateB = action.payload.dateB\n\n            console.log(\"action.payload\", task, steps, dateB, action.payload)\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    dateB: dateB,\n                    steps: steps\n                }\n            }\n        }\n\n        case SHOW: {\n            const { task, show } = action.payload\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    show: !show\n                }\n\n            }\n        }\n\n        case STEP_COMPLETED: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: {\n                        ...steps, [step]: { ...action.stepFinder, completed: 1 },\n                    }\n                }\n            }\n        }\n\n        case STEP_UNDO: {\n            const { task, steps } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            console.log(\"insde reducer completed\", completed)\n            return {\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    completed: completed,\n                    steps: { ...steps, [step]: { ...action.stepFinder, completed: 0 } }\n                }\n            }\n        }\n\n\n        default: return state\n    }\n\n}\n\n\n\nexport default reducer","import { createStore, applyMiddleware } from \"redux\"\nimport todoReducer from \"./reducers/todoReducer\"\nimport thunk from \"redux-thunk\"\nexport default createStore(todoReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}