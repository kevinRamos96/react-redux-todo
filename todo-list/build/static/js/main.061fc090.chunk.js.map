{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/taskCompletion.js","components/taskUndo.js","components/todosublist.js","components/showListItems.js","components/createTask.js","components/todolist.js","components/getDataAPI.js","App.js","reportWebVitals.js","redux/reducers/todoReducer.js","redux/store.js","index.js"],"names":["ADD_TODO","SHOW","STEP_COMPLETED","STEP_UNDO","ADD_STATE","getTask","dispatch","getState","a","console","log","axios","get","then","res","input","data","map","value","task","undefined","type","payload","taskCompletion","parent","child","index","counter","result","Object","keys","completedS","length","taskUndo","TodoSubList","propsParent","props","useDispatch","container","className","step","dateBS","style","width","onClick","item","itemStep","itemCompleted","state","put","status","stepFinder","newCompleted","ShowListItem","selector","useSelector","category","toogleUpdate","id","reduce","object","helper","toogleShowAPI","dateB","completed","dateE","steps","show","CreateTask","useState","setTask","subT","setSubT","subList","setSubList","butState","setButState","categoryData","setCategoryData","testState","date","Date","taskDate","getMonth","getDate","getFullYear","formCategory","e","target","formTask","formSubt","addSubTask","dispatchAddTodo","content","addTodo","tasks","post","postTask","dispatchAddTodoSlave","contentSteps","addTodoSlave","postTaskSteps","butSet","closeModal","placeholder","onChange","readOnly","newSubList","deleteSubTask","TodoList","list","setList","modal","setModal","setCategory","changeCategory","toogleModalCategory","changeList","GetDataFromAPI","App","isLoading","setIsLoading","setData","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","createStore","todoReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.061fc090.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const ADD_TODO_SLAVE = \"ADD_TODO_SLAVE\";\nexport const COMPLETED = \"COMPLETED\";\nexport const SHOW = \"SHOW\"\nexport const STEP_COMPLETED = \"STEP_COMPLETED\"\nexport const STEP_UNDO = \"STEP_UNDO\"\nexport const POST_TASK = \"POST_TASK\"\nexport const POST_TASK_SUCC = \"POST_TASK_SUCC\"\nexport const ADD_STATE = \"ADD_STATE\"\nexport const ADD_CATEGORY = \"ADD_CATEGORY\"","import { ADD_TODO, SHOW, COMPLETED, ADD_TODO_SLAVE, STEP_COMPLETED, STEP_UNDO, POST_TASK, POST_TASK_SUCC, ADD_STATE, ADD_CATEGORY } from \"./actionTypes\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\n\nexport const addTodo = (content, date) => ({\n    type: ADD_TODO,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n\n    }\n\n})\n\nexport const postTask = (parent, content, date) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        category: parent,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n\n\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://192.168.22.27:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", tasks)\n            console.log(\"resdata post\", res.data)\n            dispatch({ type: ADD_STATE, payload: tasks })\n        })\n\n}\n\n\nexport const getStateFromApi = (input) => ({\n    type: ADD_STATE,\n    payload: input\n})\nconst createMap = (input) => (dispatch) => {\n    console.log(\"createMap\", input)\n    if (input != null) {\n        input.map(value => {\n            console.log(\"value.task\", value.task)\n            if (value.task != undefined) {\n                dispatch({ type: ADD_STATE, payload: value })\n            }\n        })\n    }\n}\nexport const getTask = () => async (dispatch, getState) => {\n    console.log(\"insideapi getTASK\")\n    await axios.get(\"http://192.168.22.27:8080/api/\")\n        .then(res => {\n            dispatch(createMap(res.data))\n\n        })\n}\n\nexport const updateShowAPI = (input) => (dispatch, getState) => {\n    console.log(\"updateshow API\", getState)\n}\n\nexport const postTaskSteps = (parent, content, date, contentSteps) => (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        category: parent,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n\n\n    }\n    console.log(\"thunk to post\", tasks)\n    axios.post(\"http://192.168.22.27:8080/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", res)\n            console.log(\"resdata\", res.data)\n            dispatch({ type: ADD_STATE, payload: tasks })\n\n        })\n\n}\n//addTodo slave to create steps from addTodo\nexport const addTodoSlave = (content, contentSteps, date) => ({\n    type: ADD_TODO_SLAVE,\n    payload: {\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n    }\n})\n\nexport const toogleShow = item => ({\n    type: SHOW,\n    payload: item\n})\n\nexport const toogleShowAPI = (item) => (dispatch, getState) => {\n    const state = getState()\n    const id = item.task\n    console.log(\"toogleShowAPI\", state)\n    console.log(\"toogleShowAPI\", item.task)\n    const task = Object.keys(state).reduce((object, helper) => {\n        if (state[helper].task === item.task) {\n            object[helper] = state[helper]\n            console.log(\"inside reducer\", object[helper])\n        }\n        return object\n    }, {})\n    console.log(\"task to PUT\", task)\n    axios.put(\"http://192.168.22.27:8080/api/\" + id, task)\n        .then(res => console.log(\"res from PUT\", res))\n}\n\nexport const stepCompletedAPI = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n    const state = itemCompleted;\n    console.log(\"itemCompleted\", itemCompleted)\n\n}\n\nexport const stepCompleted = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n\n    const state = itemStep.step;\n    console.log(\"STEP Completed\", itemStep)\n    axios.put(\"http://192.168.22.27:8080/api/\" + item.task + \"/\" + state, item)\n        .then(res => {\n            console.log(\"response for step undo\", res.status)\n            dispatch({\n                type: STEP_COMPLETED,\n                payload: item,\n                stepFinder: itemStep,\n                newCompleted: itemCompleted\n            })\n        })\n}\n\nexport const stepUndo = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n    const state = itemStep.step;\n    console.log(\"STEP UNDO\", itemStep.step)\n\n    axios.put(\"http://192.168.22.27:8080/api/\" + item.task + \"/\" + state, item)\n        .then(res => {\n            console.log(\"response for step undo\", res.status)\n            dispatch({\n                type: STEP_UNDO,\n                payload: item,\n                stepFinder: itemStep,\n                newCompleted: itemCompleted\n            })\n        })\n\n\n}\n\nexport const addCategory = (item) => ({\n    type: ADD_CATEGORY,\n    payload: item\n})\n","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nconst taskCompletion = (parent, child) => {\n    let index = 0, counter = 1, result = 0\n    Object.keys(child).map(input => {\n        //index counts the number of steps, while counter the number of completed steps\n        index = index + 1\n        /** We know that every time we dispatch we have completed a step therfore we need to\n         * take in account that our counter(steps completed) should start in 1 however it\n         * cannot exceeed the length of the number steps therefore we set the counter to be \n         * less than the number of steps if not on the last render it will make the widht >100%\n         */\n        if (child[input].completedS > 0 && counter < Object.keys(child).length) {\n            counter = (counter + 1)\n            console.log(\"result for counter\", counter)\n\n        }\n    })\n    if (counter > 0) {\n        result = (counter / index)\n        console.log(\"result for new state\", result)\n        return result\n    }\n    console.log(\"result for index\", index)\n\n    console.log(\"result for new state\", result)\n    //base case when taskCompletion gets called we assumed that 1 step was already completed therefore\n    //we need to account for it by doing 1(completedtask)/index(number of steps)\n}\n\nexport default taskCompletion","const taskUndo = (parent, child) => {\n    let index = 0, counter = Object.keys(child).length - 1, result = 0\n    Object.keys(child).map(input => {\n        index++\n        if (child[input].completedS === 0 && counter > -1) {\n            counter -= 1\n        }\n    })\n    result = counter / index\n    console.log(\"new result \", result)\n    return result\n}\n\nexport default taskUndo","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport { stepCompleted, taskCompleted, stepUndo } from \"../redux/actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport taskCompletion from \"./taskCompletion\"\nimport taskUndo from \"./taskUndo\"\nimport \"../App.css\"\n\n\n\nconst TodoSubList = ({ propsParent, props }) => {\n    const dispatch = useDispatch()\n    console.log(\"props\", props)\n\n    if (Object.keys(props).length >= 1) {\n        let container =\n            Object.keys(props).map(input =>\n\n                <div className='container'>\n                    {console.log(\"propsStep\", props[input].step)}\n\n                    <div className=\"subitem1-container \">\n                        {props[input].step}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        {props[input].dateBS}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        <div className=\"filler\" style={{ width: `${props[input].completedS * 100}%` }}>\n                            {console.log(\"completedS\", props[input].completedS)}\n                        </div>\n                    </div>\n\n                    <div className=\"subitem1-container \">\n                        {props[input].completedS ?\n                            <button type=\"submit\" onClick={() => dispatch(stepUndo(propsParent, props[input], taskUndo(propsParent, props)))}>Undo</button>\n\n                            :\n                            <button type=\"submit\" onClick={() => dispatch(stepCompleted(propsParent, props[input], taskCompletion(propsParent, props)))}>Complete</button>\n\n                        }\n\n                    </div>\n\n                </div>\n            )\n        console.log(\"returning\")\n        return container\n    }\n    return null\n}\n\n\n\nexport default TodoSubList;","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getStateFromApi, getTask, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = (props) => {\n    const dispatch = useDispatch()\n\n    const tempState = useSelector(state => state)\n    const selector = tempState[props.category]\n    console.log(\"props category\", props.category)\n    console.log(\"selector state\", selector)\n    console.log(\"props category array\", selector[props.category])\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(toogleShowAPI(input))\n        console.log(\"input show\", input)\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    <div className=\"container\">\n                        <div className=\"item2\">{selector[input].task}\n                            <div className=\"button-class\">\n                                <button type='submit' onClick={() => (toogleUpdate(selector[input]))}  >ShowSteps</button>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateB}</div>\n                        <div className=\"item2\">\n                            <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                            </div>\n                        </div>\n                        <div className=\"item2\">{selector[input].dateE}</div>\n                    </div>\n                    {console.log(\"input.date\", selector[input].dateB)}\n                    {console.log(\"input.steps\", selector[input].steps)}\n\n                    <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                    </div>\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem","import { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addTodo, addTodoSlave, getTask, postTaskSteps } from \"../redux/actions\"\nimport { postTask } from \"../redux/actions\";\nimport '../css/modal.css'\n\nconst CreateTask = (props) => {\n    const [task, setTask] = useState(null)\n    const [subT, setSubT] = useState(null)\n    const [subList, setSubList] = useState(\"\")\n    const [butState, setButState] = useState(false)\n    const [categoryData, setCategoryData] = useState(\"\")\n    const dispatch = useDispatch()\n    const testState = useSelector(state => state)\n    console.log(\"testState\", testState)\n    const date = new Date()\n    const taskDate = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n\n    const formCategory = (e) => {\n        console.log(\"category\", categoryData);\n        setCategoryData(e.target.value);\n    }\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n\n    //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n    const addSubTask = () => {\n\n        if (subList === null) {\n            setSubList({\n                [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"if addSubTask\", subList)\n            setSubT(\"\")\n            console.log(\"ifsubt\", subT)\n\n        }\n\n        else {\n            console.log(\"else\", subT)\n            console.log(\"else addSubTask\", subList)\n            setSubList({\n                ...subList, [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"subList\", subList)\n            setSubT(\"\")\n\n        }\n\n\n\n\n    }\n\n    const dispatchAddTodo = () => {\n        dispatch(addTodo(task, taskDate))\n        dispatch(postTask(task, taskDate))\n        dispatch(getTask())\n    }\n    //Set state for task and subList to null\n    const dispatchAddTodoSlave = () => {\n        dispatch(addTodoSlave(categoryData, task, subList, taskDate))\n        dispatch(postTaskSteps(categoryData, task, taskDate, subList))\n        setTask(\"\");\n        setSubList(\"\");\n        setButState(false)\n        setCategoryData(\"\");\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n    //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n    const deleteSubTask = (input) => {\n        console.log(\"deleting step\", input)\n        const newSubList = Object.keys(subList).reduce((object, helper) => {\n            if (subList[helper] !== input) {\n                console.log(\"sublist\", subList[helper])\n                object[helper] = subList[helper]\n            }\n            return object\n        }, {}\n        )\n        console.log(\"newSubList\", newSubList)\n        setSubList(newSubList)\n        console.log(\"subListFromDelete\", subList)\n    }\n\n    let container = (<div className=\"box\">\n        <div className=\"close-icon\" onClick={props.closeModal}>X</div>\n        {!butState ? <>\n            <div className=\"boxTitle\">\n                <input value={task} placeholder=\"Input step Name\" onChange={(e) => formTask(e)}></input>\n                <input value={categoryData} placeholder=\"Input Category Name\" onChange={(e) => formCategory(e)}></input>\n            </div>\n            <div className=\"buttonBox\">\n                <button type='submit' onClick={() => dispatchAddTodo()}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n            </div>\n\n        </>\n            :\n            <>\n                <div className=\"boxTitle\">\n                    <input value={task} placeholder=\"Input step Name\" onChange={(e) => formTask(e)}></input>\n                    <input value={categoryData} placeholder=\"Input Category Name\" onChange={(e) => formCategory(e)}></input>\n\n                    {subList === null ?\n                        <>\n                            {console.log(\"inside true sublist\")}\n                            <div className=\"box-Title-inside\">\n                                <input value={subT} placeholder=\"Input step Name\" onChange={(e) => formSubt(e)}></input>\n                                <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                            </div>\n\n                        </>\n                        :\n                        <>\n                            <>\n                                {Object.keys(subList).map(input => <div className=\"box-Title-inside\">\n                                    <input readOnly value={subList[input].step}></input>\n                                    <button type=\"submit\" onClick={() => deleteSubTask(subList[input])}>Delete Step</button>\n                                </div>)}\n                                <div className=\"box-Title-inside\">\n                                    <input value={subT} onChange={(e) => formSubt(e)}></input>\n                                    <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                                </div>\n                            </>\n                        </>\n                    }\n                </div>\n                <div className=\"buttonBox\">\n                    <button type='submit' onClick={() => dispatchAddTodoSlave()}>Add Task</button>\n                    <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                </div>\n            </>}\n\n\n        <br></br>\n\n    </div>)\n\n    return container\n\n\n}\n\nexport default CreateTask","import React, { Component, useEffect, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport \"../App.css\"\n\n\nconst TodoList = (props) => {\n    const [list, setList] = useState(\"\")\n    const [modal, setModal] = useState(false)\n    const [data, setData] = useState(props.data)\n    const state = useSelector(input => input)\n    const [category, setCategory] = useState(\"\")\n    console.log(\"data from APP.JS\", props.data)\n    console.log(\"data from APP.JS\", data.length)\n    console.log(\"state from APP.JS\", state)\n\n    //change category\n    const changeCategory = (input) => {\n        setCategory(input)\n        setModal(false)\n        console.log(\"cate4gori\", category)\n    }\n    //setModal\n    const toogleModalCategory = () => {\n        setModal(!modal);\n        setCategory(\"\")\n        console.log(\"modal\", modal)\n    }\n    const changeList = (e) => {\n        setList(e.target.value);\n        console.log(\"changeList\", list)\n\n    }\n    //set up state from app.js\n    let content = (\n        <div>\n            <div className=\"main\">\n                <div className=\"main-menu\">\n                    <div className=\"menu-boxes\">\n                        {(data.length > Object.keys(state).length) ?\n                            <>\n                                {Object.keys(data).map(input =>\n                                    <div className=\"btn-box\">\n                                        <button onClick={() => changeCategory(data[input])} >{data[input]}</button>\n                                    </div>\n                                )}\n                            </>\n                            :\n                            <>\n                                {\n                                    (Object.keys(state).length > 0) ?\n                                        <>\n                                            {Object.keys(state).map(input =>\n                                                <div className=\"btn-box\">\n                                                    <button onClick={() => changeCategory(input)} >{input}</button>\n                                                </div>\n                                            )}\n                                        </>\n\n                                        :\n\n                                        <></>\n\n                                }\n                            </>\n                        }\n\n                    </div>\n                    <div className=\"footer\">\n                        <div className=\"footer-box\">\n                            <button type=\"submit\" onClick={() => toogleModalCategory()}>Add Task</button>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"main-content\">\n                    {(data.length === 0 && Object.keys(state).length === 0) ?\n                        <>\n\n                            {console.log(\"if data is emplty modal is\", modal)}\n                            <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModalCategory}\n                                category={category}>\n\n                            </CreateTask>\n                        </>\n                        :\n                        <>\n                            {modal && <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModalCategory}\n                                category={category}\n                            />}\n\n                        </>\n\n                    }\n                    {category !== \"\" && <ShowListItem\n                        category={category}\n\n                    />}\n\n\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;","import { useDispatch, useSelector } from 'react-redux'\nimport { getTask } from '../redux/actions'\n\nconst GetDataFromAPI = () => {\n    const dispatch = useDispatch()\n    // const selector = useSelector(state => state)\n    //create redux state if there is data on the dB\n    dispatch(getTask())\n    //console.log(\"getDataAPI.js Data\", data)\n    // data.map(input => console.log(\"data input map\", input))\n    //console.log(\"getDataAPI.js\", selector)\n    return null\n}\n\nexport default GetDataFromAPI","import './App.css';\nimport React, { Component, useEffect, useState } from \"react\"\nimport TodoList from './components/todolist'\nimport GetDataFromAPI from './components/getDataAPI'\nimport axios from 'axios'\nconst App = () => {\n\n  const todo =\n    [{\n      task: \"firts\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"second\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: [{\n        miniT: \"test\",\n        completed: true\n      },\n      {\n        miniT: 'test2'\n      }]\n    },\n    {\n      task: \"third\",\n      dateB: \"1/1/1\",\n      dateE: \"1/1/1\",\n      completed: false,\n      show: false,\n      steps: []\n    }]\n  //Initiate redux state if there is data saved omn DB with GETDataFromAPI() needs to only be run once at the beginning\n  //of the application if it is run other than at the beginning it casuse the app to create an infinite loop of API calls\n  //due to constantly re rendering\n  const fetch = GetDataFromAPI() //initiate redux state\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(\"\")\n  useEffect(() => {\n    axios.get(\"http://192.168.22.27:8080/api/getCategories\").\n      then(res => {\n        console.log(\"res.status\", res.status)\n        console.log(res.data);\n        setData(res.data)\n        setIsLoading(false)\n      })\n\n  }, [])\n\n  if (isLoading) {\n    return (<div>LOADING</div>)\n  }\n\n  return (<TodoList\n    data={data}\n  ></TodoList>)\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO, POST_TASK, ADD_STATE } from \"../actionTypes\"\n\nconst initialState = {\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { task, date } = action.payload;\n            return {\n\n                ...state,\n                [task]: {\n                    ...action.payload,\n                    task: task,\n                    date: date\n                }\n            }\n        }\n\n        case ADD_STATE: {\n            const { task, category, steps, dateB, } = action.payload;\n            // const task = action.payload.task\n            // const steps = action.payload.steps\n            // const dateB = action.payload.dateB\n\n            console.log(\"action.payload\", task, steps, dateB, action.payload)\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        task: task,\n                        category: category,\n                        dateB: dateB,\n                        steps: steps\n                    }\n                }\n\n            }\n        }\n\n        case SHOW: {\n            const { task, show, category } = action.payload\n            console.log(\"inside SHOW category\", category)\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        show: !show\n                    }\n                }\n\n\n            }\n        }\n\n        case STEP_COMPLETED: {\n            const { task, steps, category } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        completed: completed,\n                        steps: {\n                            ...steps, [step]: { ...action.stepFinder, completedS: 1 },\n                        }\n                    }\n                }\n\n            }\n        }\n\n        case STEP_UNDO: {\n            const { task, steps, category } = action.payload\n            const completed = action.newCompleted\n            const { step } = action.stepFinder\n            console.log(\"insde reducer completed\", completed)\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        completed: completed,\n                        steps: { ...steps, [step]: { ...action.stepFinder, completedS: 0 } }\n                    }\n                }\n\n            }\n        }\n\n\n        default: return state\n    }\n\n}\n\n\n\nexport default reducer","import { createStore, applyMiddleware } from \"redux\"\nimport todoReducer from \"./reducers/todoReducer\"\nimport thunk from \"redux-thunk\"\nexport default createStore(todoReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}