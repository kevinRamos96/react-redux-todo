{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/taskCompletion.js","components/taskUndo.js","components/todosublist.js","components/showListItems.js","components/createTask.js","components/todolist.js","components/getDataAPI.js","App.js","reportWebVitals.js","redux/reducers/todoReducer.js","redux/store.js","index.js"],"names":["SHOW","STEP_COMPLETED","STEP_UNDO","ADD_STATE","DELETE_TASK","dateDrive","Date","getTask","dispatch","getState","a","console","log","axios","get","then","res","input","data","map","value","task","undefined","type","payload","stepCompleted","item","itemStep","itemCompleted","state","step","replace","taskDate","getMonth","getDate","getFullYear","put","id","status","stepFinder","newCompleted","newDate","stepUndo","deleteTask","delete","taskCompletion","parent","child","index","counter","result","Object","keys","completedS","length","taskUndo","TodoSubList","propsParent","props","useDispatch","container","className","dateBS","style","width","onClick","ShowListItem","selector","useSelector","category","toogleUpdate","reduce","object","helper","toogleShowAPI","steps","completed","dateB","dateE","show","CreateTask","useState","setTask","subT","setSubT","subList","setSubList","butState","setButState","categoryData","setCategoryData","testState","date","formCategory","e","target","formTask","formSubt","addSubTask","dispatchAddTodo","content","tasks","post","postTask","closeModal","dispatchAddTodoSlave","contentSteps","postTaskSteps","butSet","placeholder","onChange","readOnly","newSubList","deleteSubTask","list","TodoList","setList","modal","setModal","setCategory","changeCategory","toogleModalCategory","changeList","GetDataFromAPI","App","isLoading","setIsLoading","setData","fetcher","setFetcher","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","temp","newState","createStore","todoReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.676f1cfb.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const ADD_TODO_SLAVE = \"ADD_TODO_SLAVE\";\nexport const COMPLETED = \"COMPLETED\";\nexport const SHOW = \"SHOW\"\nexport const STEP_COMPLETED = \"STEP_COMPLETED\"\nexport const STEP_UNDO = \"STEP_UNDO\"\nexport const POST_TASK = \"POST_TASK\"\nexport const POST_TASK_SUCC = \"POST_TASK_SUCC\"\nexport const ADD_STATE = \"ADD_STATE\"\nexport const ADD_CATEGORY = \"ADD_CATEGORY\"\nexport const DELETE_TASK = \"DELETE_TASK\"","import { ADD_TODO, SHOW, COMPLETED, ADD_TODO_SLAVE, STEP_COMPLETED, STEP_UNDO, POST_TASK, POST_TASK_SUCC, ADD_STATE, ADD_CATEGORY, DELETE_TASK } from \"./actionTypes\"\nimport axios from \"axios\"\nimport { useDispatch } from \"react-redux\"\n\nconst dateDrive = new Date()\n\n\n\nexport const postTask = (parent, content, date) => async (dispatch, getState) => {\n    const tasks = {\n        category: parent,\n        task: content,\n        dateB: date,\n        dateE: \"1/1/1\",\n        completed: 0,\n        show: false,\n        steps: {\n        },\n\n\n    }\n    console.log(\"thunk to post\", tasks)\n    await axios.post(\"https://guarded-ridge-09727.herokuapp.com/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", tasks)\n            console.log(\"resdata post\", res.data)\n            dispatch(getTask())\n        })\n\n}\n\n\nexport const getStateFromApi = (input) => ({\n    type: ADD_STATE,\n    payload: input\n})\nconst createMap = (input) => (dispatch) => {\n    console.log(\"createMap\", input)\n    if (input != null) {\n        input.map(value => {\n            console.log(\"value.task\", value.task)\n            if (value.task != undefined) {\n                dispatch({ type: ADD_STATE, payload: value })\n            }\n        })\n    }\n}\nexport const getTask = () => async (dispatch, getState) => {\n    console.log(\"insideapi getTASK\")\n    await axios.get(\"https://guarded-ridge-09727.herokuapp.com/api/\")\n        .then(res => {\n            dispatch(createMap(res.data))\n\n        })\n}\n\n\n\nexport const postTaskSteps = (parent, content, date, contentSteps) => async (dispatch, getState) => {\n    const tasks = {\n        task: content,\n        category: parent,\n        dateB: date,\n        dateE: \"TBA\",\n        completed: 0,\n        show: false,\n        steps: contentSteps\n\n\n    }\n    console.log(\"thunk to post\", tasks)\n    await axios.post(\"https://guarded-ridge-09727.herokuapp.com/api/\", tasks)\n        .then(res => {\n            console.log(\"res\", res)\n            console.log(\"resdata\", res.data)\n            dispatch(getTask())\n        })\n\n}\n//addTodo slave to create steps from addTodo\n\n\nexport const toogleShow = item => ({\n    type: SHOW,\n    payload: item\n})\n\nexport const toogleShowAPI = (item) => (dispatch, getState) => {\n    const state = getState()\n    const id = item.id\n    console.log(\"toogleShowAPI\", state)\n    console.log(\"toogleShowAPI\", id)\n    const task = Object.keys(state).reduce((object, helper) => {\n        if (state[helper].task === item.task) {\n            object[helper] = state[helper]\n            console.log(\"inside reducer\", object[helper])\n        }\n        return object\n    }, {})\n    console.log(\"task to PUT\", task)\n    axios.put(\"https://guarded-ridge-09727.herokuapp.com/api/\" + id, task)\n        .then(res => console.log(\"res from PUT\", res))\n}\n\n\n\nexport const stepCompleted = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n    if (itemStep !== null) {\n        let state = itemStep.step;\n        state = state.replace(/\\s/g, \"_\")\n        console.log(\"STEP Completed\", itemStep)\n        if (itemCompleted == 1) {\n            const taskDate = (dateDrive.getMonth() + 1) + \"/\" + dateDrive.getDate() + \"/\" + dateDrive.getFullYear()\n            console.log(\"taskDate\", taskDate)\n            axios.put(\"https://guarded-ridge-09727.herokuapp.com/api/\" + item.id + \"/\" + state, item)\n                .then(res => {\n                    console.log(\"response for step complete\", res.status)\n                    dispatch({\n                        type: STEP_COMPLETED,\n                        payload: item,\n                        stepFinder: itemStep,\n                        newCompleted: itemCompleted,\n                        newDate: taskDate\n                    })\n                })\n        }\n\n        else {\n            console.log(\"STEP Completed\", itemCompleted)\n            axios.put(\"https://guarded-ridge-09727.herokuapp.com/api/\" + item.id + \"/\" + state, item)\n                .then(res => {\n                    console.log(\"response for step complete\", res.status)\n                    dispatch({\n                        type: STEP_COMPLETED,\n                        payload: item,\n                        stepFinder: itemStep,\n                        newCompleted: itemCompleted,\n                        newDate: \"TBA\"\n                    })\n                })\n        }\n\n    }\n    else {\n        console.log(\"STEP Completed\", itemCompleted)\n        const taskDate = (dateDrive.getMonth() + 1) + \"/\" + dateDrive.getDate() + \"/\" + dateDrive.getFullYear()\n        axios.put(\"https://guarded-ridge-09727.herokuapp.com/api/\" + item.id + \"/\" + \"null\", item)\n            .then(res => {\n                console.log(\"response for step complete\", res.status)\n                dispatch({\n                    type: STEP_COMPLETED,\n                    payload: item,\n                    stepFinder: itemStep,\n                    newCompleted: itemCompleted,\n                    newDate: taskDate\n                })\n            })\n\n\n    }\n\n}\n\nexport const stepUndo = (item, itemStep, itemCompleted) => (dispatch, getState) => {\n    if (itemStep !== null) {\n        let state = itemStep.step;\n        state = state.replace(/\\s/g, \"_\")\n        console.log(\"STEP UNDO\", itemStep.step)\n\n        axios.put(\"https://guarded-ridge-09727.herokuapp.com/api/\" + item.id + \"/\" + state, item)\n            .then(res => {\n                console.log(\"response for step undo\", res.status)\n                dispatch({\n                    type: STEP_UNDO,\n                    payload: item,\n                    stepFinder: itemStep,\n                    newCompleted: itemCompleted,\n                    newDate: \"TBA\"\n                })\n            })\n    }\n    else {\n        axios.put(\"https://guarded-ridge-09727.herokuapp.com/api/\" + item.id + \"/\" + \"null\", item)\n            .then(res => {\n                console.log(\"response for step undo\", res.status)\n                dispatch({\n                    type: STEP_UNDO,\n                    payload: item,\n                    stepFinder: itemStep,\n                    newCompleted: itemCompleted,\n                    newDate: \"TBA\"\n                })\n            })\n    }\n\n\n}\n\nexport const addCategory = (item) => ({\n    type: ADD_CATEGORY,\n    payload: item\n})\n\nexport const deleteTask = (item) => (dispatch, getState) => {\n\n    axios.delete(\"https://guarded-ridge-09727.herokuapp.com/api/\" + item.id, item).\n        then(res => {\n            console.log(\"delete status\", res.status)\n            dispatch({ type: DELETE_TASK, payload: item })\n        })\n}\n","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { toogleShow } from \"../redux/actions\"\n\nconst taskCompletion = (parent, child) => {\n    let index = 0, counter = 1, result = 0\n    Object.keys(child).map(input => {\n        //index counts the number of steps, while counter the number of completed steps\n        index = index + 1\n        /** We know that every time we dispatch we have completed a step therfore we need to\n         * take in account that our counter(steps completed) should start in 1 however it\n         * cannot exceeed the length of the number steps therefore we set the counter to be \n         * less than the number of steps if not on the last render it will make the widht >100%\n         */\n        if (child[input].completedS > 0 && counter < Object.keys(child).length) {\n            counter = (counter + 1)\n            console.log(\"result for counter\", counter)\n\n        }\n    })\n    if (counter > 0) {\n        result = (counter / index)\n        console.log(\"result for new state\", result)\n        return result\n    }\n    console.log(\"result for index\", index)\n\n    console.log(\"result for new state\", result)\n    //base case when taskCompletion gets called we assumed that 1 step was already completed therefore\n    //we need to account for it by doing 1(completedtask)/index(number of steps)\n}\n\nexport default taskCompletion","const taskUndo = (parent, child) => {\n    let index = 0, counter = Object.keys(child).length - 1, result = 0\n    Object.keys(child).map(input => {\n        index++\n        if (child[input].completedS === 0 && counter > -1) {\n            counter -= 1\n        }\n    })\n    result = counter / index\n    console.log(\"new result \", result)\n    return result\n}\n\nexport default taskUndo","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport { stepCompleted, taskCompleted, stepUndo, deleteTask } from \"../redux/actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport taskCompletion from \"./taskCompletion\"\nimport taskUndo from \"./taskUndo\"\nimport \"../App.css\"\n\n\n\nconst TodoSubList = ({ propsParent, props }) => {\n    const dispatch = useDispatch()\n    console.log(\"props\", props)\n\n    if (Object.keys(props).length >= 1) {\n        let container =\n            Object.keys(props).map(input =>\n\n                <div className='container'>\n                    {console.log(\"propsStep\", props[input].step)}\n\n                    <div className=\"subitem1-container \">\n                        {props[input].step}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        {props[input].dateBS}\n                    </div>\n                    <div className=\"subitem1-container \">\n                        <div className=\"filler\" style={{ width: `${props[input].completedS * 100}%` }}>\n                            {console.log(\"completedS\", props[input].completedS)}\n                        </div>\n                    </div>\n\n                    <div className=\"subitem1-container \">\n                        {props[input].completedS ?\n                            <>\n                                <button type=\"submit\" onClick={() => dispatch(stepUndo(propsParent, props[input], taskUndo(propsParent, props)))}>Undo</button>\n                            </>\n                            :\n                            <button type=\"submit\" onClick={() => dispatch(stepCompleted(propsParent, props[input], taskCompletion(propsParent, props)))}>Complete</button>\n\n                        }\n\n                    </div>\n\n                </div>\n            )\n        console.log(\"returning\")\n        return container\n    }\n    return null\n}\n\n\n\nexport default TodoSubList;","import { Component, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { deleteTask, deleteTaskNOAPI, getStateFromApi, getTask, stepCompleted, stepUndo, toogleShow, toogleShowAPI, updateShowAPI } from \"../redux/actions\"\nimport TodoSubList from './todosublist'\nimport \"../css/progress.css\"\n\n\n\nconst ShowListItem = (props) => {\n    const dispatch = useDispatch()\n    const tempState = useSelector(state => state)\n    const selector = tempState[props.category]\n    console.log(\"props category\", props.category)\n    console.log(\"selector state\", selector)\n    console.log(\"props category array\", selector[props.category])\n    //update state show on database\n    const toogleUpdate = (input) => {\n        dispatch(toogleShow(input))\n        dispatch(toogleShowAPI(input))\n        console.log(\"input show\", input)\n    }\n    if (Object.keys(selector).length >= 1) {\n        console.log(\"inside showItem\", selector)\n        console.log(\"using selector len\", Object.keys(selector))\n\n        let mapper =\n            Object.keys(selector).map(input =>\n\n                <div className=\"holder\">\n                    {console.log(\"input\", selector[input])}\n\n                    {(Object.keys(selector[input].steps).length == 0) ?\n\n                        <>\n                            <div className=\"container\">\n\n                                <div className=\"item2\">{selector[input].task}\n                                    <div className=\"button-class\">\n                                        {selector[input].completed === 1 ?\n                                            <>\n                                                <button type='submit' onClick={() => (dispatch(stepUndo(selector[input], null, 0)))}  >Undo</button>\n                                                <button type='submit' onClick={() => dispatch(deleteTask(selector[input]))}>Remove</button>\n                                            </>\n                                            :\n                                            <button type='submit' onClick={() => (dispatch(stepCompleted(selector[input], null, 1)))}  >Completed</button>\n                                        }\n\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateB}</div>\n                                <div className=\"item2\">\n                                    <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateE}</div>\n                            </div>\n                        </>\n\n                        :\n                        <>\n                            <div className=\"container\">\n\n                                <div className=\"item2\">{selector[input].task}\n                                    <div className=\"button-class\">\n                                        <>\n                                            <button type='submit' onClick={() => (toogleUpdate(selector[input]))}  >ShowSteps</button>\n                                            {selector[input].completed === 1 &&\n                                                <button type='submit' onClick={() => dispatch(deleteTask(selector[input]))}>Remove</button>\n                                            }\n                                        </>\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateB}</div>\n                                <div className=\"item2\">\n                                    <div className=\"filler\" style={{ width: `${selector[input].completed * 100}%` }}>\n                                    </div>\n                                </div>\n                                <div className=\"item2\">{selector[input].dateE}</div>\n                            </div>\n                            {console.log(\"input.date\", selector[input].dateB)}\n                            {console.log(\"input.steps\", selector[input].steps)}\n\n                            <div>{(Object.keys(selector[input].steps).length >= 1 && selector[input].show === true) && <TodoSubList propsParent={selector[input]} props={selector[input].steps} />}\n                            </div>\n\n\n                        </>\n                    }\n\n                </div>\n            )\n        return mapper\n    }\n    return null\n}\n\nexport default ShowListItem","import { Component, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getTask, postTaskSteps } from \"../redux/actions\"\nimport { postTask } from \"../redux/actions\";\nimport '../css/modal.css'\n\nconst CreateTask = (props) => {\n    const [task, setTask] = useState(null)\n    const [subT, setSubT] = useState(null)\n    const [subList, setSubList] = useState(\"\")\n    const [butState, setButState] = useState(false)\n    const [categoryData, setCategoryData] = useState(\"\")\n    const dispatch = useDispatch()\n    const testState = useSelector(state => state)\n    console.log(\"testState\", testState)\n    const date = new Date()\n    const taskDate = (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n\n    const formCategory = (e) => {\n        console.log(\"category\", categoryData);\n        setCategoryData(e.target.value);\n    }\n    const formTask = (e) => {\n        console.log(\"target\", e.target.value)\n        setTask(e.target.value)\n        console.log(\"target\", task)\n\n    }\n\n\n    const formSubt = (e) => {\n        setSubT(e.target.value)\n        console.log(\"subT\", subT)\n    }\n\n    //Add a subTASK to subList with two conditions when it is the first subtask to be added and then where thre is not the first one\n    const addSubTask = () => {\n\n        if (subList === null) {\n            setSubList({\n                [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"if addSubTask\", subList)\n            setSubT(\"\")\n            console.log(\"ifsubt\", subT)\n\n        }\n\n        else {\n            console.log(\"else\", subT)\n            console.log(\"else addSubTask\", subList)\n            setSubList({\n                ...subList, [subT]: {\n                    step: subT,\n                    dateBS: taskDate,\n                    completedS: 0\n                }\n            })\n            console.log(\"subList\", subList)\n            setSubT(\"\")\n\n        }\n\n\n\n\n    }\n\n    const dispatchAddTodo = () => {\n        // dispatch(addTodo(task, taskDate))\n        dispatch(postTask(categoryData, task, taskDate))\n        props.closeModal()\n    }\n    //Set state for task and subList to null\n    const dispatchAddTodoSlave = () => {\n        dispatch(postTaskSteps(categoryData, task, taskDate, subList))\n        setTask(\"\");\n        setSubList(\"\");\n        setButState(false)\n        setCategoryData(\"\");\n        props.closeModal()\n    }\n    const butSet = () => {\n        setButState(!butState)\n\n    }\n    //When user deletes subStep perform a reducer on the sublist obj, save it on a newSublist const and set it to subList\n    const deleteSubTask = (input) => {\n        console.log(\"deleting step\", input)\n        const newSubList = Object.keys(subList).reduce((object, helper) => {\n            if (subList[helper] !== input) {\n                console.log(\"sublist\", subList[helper])\n                object[helper] = subList[helper]\n            }\n            return object\n        }, {}\n        )\n        console.log(\"newSubList\", newSubList)\n        setSubList(newSubList)\n        console.log(\"subListFromDelete\", subList)\n    }\n\n    let container = (<div className=\"box\">\n        <div className=\"close-icon\" onClick={props.closeModal}>X</div>\n        {!butState ? <>\n            <div className=\"boxTitle\">\n                <input value={task} placeholder=\"Input step Name\" onChange={(e) => formTask(e)}></input>\n                <input value={categoryData} list=\"catOptions\" placeholder=\"Input Category Name\" onChange={(e) => formCategory(e)}></input>\n\n                <datalist id=\"catOptions\" >\n                    {Object.keys(testState).map(input =>\n\n                        <option>{input}</option>\n\n                    )\n                    }\n                </datalist>\n\n            </div>\n            <div className=\"buttonBox\">\n                <button type='submit' onClick={() => dispatchAddTodo()}>Add Task</button>\n                <button type=\"submit\" onClick={() => butSet()}>CreateSubTask</button>\n            </div>\n\n        </>\n            :\n            <>\n                <div className=\"boxTitle\">\n                    <input value={task} placeholder=\"Input step Name\" onChange={(e) => formTask(e)}></input>\n                    <input value={categoryData} placeholder=\"Input Category Name\" onChange={(e) => formCategory(e)}></input>\n\n                    {subList === null ?\n                        <>\n                            {console.log(\"inside true sublist\")}\n                            <div className=\"box-Title-inside\">\n                                <input value={subT} placeholder=\"Input step Name\" onChange={(e) => formSubt(e)}></input>\n                                <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                            </div>\n\n                        </>\n                        :\n                        <>\n                            <>\n                                {Object.keys(subList).map(input => <div className=\"box-Title-inside\">\n                                    <input readOnly value={subList[input].step}></input>\n                                    <button type=\"submit\" onClick={() => deleteSubTask(subList[input])}>Delete Step</button>\n                                </div>)}\n                                <div className=\"box-Title-inside\">\n                                    <input value={subT} onChange={(e) => formSubt(e)}></input>\n                                    <button type=\"submit\" onClick={() => addSubTask()}>submit step</button>\n                                </div>\n                            </>\n                        </>\n                    }\n                </div>\n                <div className=\"buttonBox\">\n                    <button type='submit' onClick={() => dispatchAddTodoSlave()}>Add Task</button>\n                    <button type=\"submit\" onClick={() => butSet()}>DeleteAllSubTask</button>\n                </div>\n            </>}\n\n\n        <br></br>\n\n    </div>)\n\n    return container\n\n\n}\n\nexport default CreateTask","import React, { Component, useEffect, useState } from 'react';\nimport TodoSubList from './todosublist'\nimport ShowListItem from './showListItems'\nimport CreateTask from './createTask'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport \"../App.css\"\n\n\nconst TodoList = (props) => {\n    const [list, setList] = useState(\"\")\n    const [modal, setModal] = useState(false)\n    const [data, setData] = useState(props.data)\n    const state = useSelector(input => input)\n    const [category, setCategory] = useState(\"\")\n    console.log(\"data from APP.JS\", props.data)\n    console.log(\"data from APP.JS\", data.length)\n    console.log(\"state from APP.JS\", state)\n\n    //change category\n    const changeCategory = (input) => {\n        setCategory(input)\n        setModal(false)\n        console.log(\"cate4gori\", category)\n    }\n    //setModal\n    const toogleModalCategory = () => {\n        setModal(!modal);\n        setCategory(\"\")\n        console.log(\"modal\", modal)\n    }\n    const changeList = (e) => {\n        setList(e.target.value);\n        console.log(\"changeList\", list)\n\n    }\n    //set up state from app.js\n    let content = (\n        <div>\n            <div className=\"main\">\n                <div className=\"main-menu\">\n                    <div className=\"menu-boxes\">\n                        {(data.length > Object.keys(state).length) ?\n                            <>\n                                {Object.keys(data).map(input =>\n                                    <div className=\"btn-box\">\n                                        <button onClick={() => changeCategory(data[input])} >{data[input]}</button>\n                                    </div>\n                                )}\n                            </>\n                            :\n                            <>\n                                {\n                                    (Object.keys(state).length > 0) ?\n                                        <>\n                                            {Object.keys(state).map(input =>\n                                                <div className=\"btn-box\">\n                                                    <button onClick={() => changeCategory(input)} >{input}</button>\n                                                </div>\n                                            )}\n                                        </>\n\n                                        :\n\n                                        <></>\n\n                                }\n                            </>\n                        }\n\n                    </div>\n                    <div className=\"footer\">\n                        <div className=\"footer-box\">\n                            <button type=\"submit\" onClick={() => toogleModalCategory()}>Add Task</button>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"main-content\">\n                    {(data.length === 0 && Object.keys(state).length === 0) ?\n                        <>\n\n                            {console.log(\"if data is emplty modal is\", modal)}\n                            <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModalCategory}\n                                category={category}>\n\n                            </CreateTask>\n                        </>\n                        :\n                        <>\n                            {modal && <CreateTask\n                                content={\n                                    <input value={list} onChange={(e) => changeList(e)}></input>\n                                }\n                                closeModal={toogleModalCategory}\n                                category={category}\n                            />}\n\n                        </>\n\n                    }\n                    {category !== \"\" && <ShowListItem\n                        category={category}\n\n                    />}\n\n\n                </div>\n\n            </div>\n\n\n        </div>\n    )\n    return content\n}\n\n\nexport default TodoList;","import { useDispatch, useSelector } from 'react-redux'\nimport { getTask } from '../redux/actions'\n\nconst GetDataFromAPI = () => {\n    const dispatch = useDispatch()\n    // const selector = useSelector(state => state)\n    //create redux state if there is data on the dB\n    dispatch(getTask())\n    //console.log(\"getDataAPI.js Data\", data)\n    // data.map(input => console.log(\"data input map\", input))\n    //console.log(\"getDataAPI.js\", selector)\n    return null\n}\n\nexport default GetDataFromAPI","import './App.css';\nimport React, { Component, useEffect, useState } from \"react\"\nimport TodoList from './components/todolist'\nimport GetDataFromAPI from './components/getDataAPI'\nimport axios from 'axios'\n\nconst App = () => {\n\n\n  //Initiate redux state if there is data saved omn DB with GETDataFromAPI() needs to only be run once at the beginning\n  //of the application if it is run other than at the beginning it casuse the app to create an infinite loop of API calls\n  //due to constantly re rendering\n  const fetch = GetDataFromAPI() //initiate redux state\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(\"\")\n  const [fetcher, setFetcher] = useState(false)\n\n  useEffect(() => {\n    axios.get(\"https://guarded-ridge-09727.herokuapp.com/api/getCategories\").\n      then(res => {\n        console.log(\"res.status\", res.status)\n        console.log(res.data);\n        setData(res.data)\n        setIsLoading(false)\n        setFetcher(false)\n      })\n\n  }, [fetcher])\n\n  if (isLoading) {\n    return (<div className=\"loader\"></div>)\n  }\n\n  return (<TodoList\n    data={data}\n  ></TodoList>)\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport { ADD_TODO, SHOW, ADD_TODO_SLAVE, STEP_COMPLETED, COMPLETED, STEP_UNDO, POST_TASK, ADD_STATE, DELETE_TASK } from \"../actionTypes\"\n\nconst initialState = {\n\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n\n        case ADD_STATE: {\n            const { task, category, steps, dateB, } = action.payload;\n            // const task = action.payload.task\n            // const steps = action.payload.steps\n            // const dateB = action.payload.dateB\n\n            console.log(\"action.payload\", task, steps, dateB, action.payload)\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        task: task,\n                        category: category,\n                        dateB: dateB,\n                        steps: steps\n                    }\n                }\n\n            }\n        }\n\n        case SHOW: {\n            const { task, show, category } = action.payload\n            console.log(\"inside SHOW category\", category)\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        show: !show\n                    }\n                }\n\n\n            }\n        }\n\n        case STEP_COMPLETED: {\n            const { task, steps, category } = action.payload\n            const completed = action.newCompleted\n            const newDate = action.newDate\n            if (action.stepFinder !== null) {\n                const { step } = action.stepFinder\n                return {\n                    ...state,\n                    [category]: {\n                        ...state[category],\n                        [task]: {\n                            ...action.payload,\n                            completed: completed,\n                            dateE: newDate,\n                            steps: {\n                                ...steps, [step]: { ...action.stepFinder, completedS: 1 },\n                            }\n                        }\n                    }\n\n                }\n            }\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        dateE: newDate,\n                        completed: completed,\n\n                    }\n                }\n\n            }\n        }\n\n        case STEP_UNDO: {\n            const { task, steps, category } = action.payload\n            const newDate = action.newDate\n            const completed = action.newCompleted\n            console.log(\"insde reducer completed\", completed)\n            if (action.stepFinder !== null) {\n                const { step } = action.stepFinder\n                return {\n                    ...state,\n                    [category]: {\n                        ...state[category],\n                        [task]: {\n                            ...action.payload,\n                            completed: completed,\n                            dateE: newDate,\n                            steps: {\n                                ...steps, [step]: { ...action.stepFinder, completedS: 0 },\n                            }\n                        }\n                    }\n\n                }\n            }\n            return {\n                ...state,\n                [category]: {\n                    ...state[category],\n                    [task]: {\n                        ...action.payload,\n                        dateE: newDate,\n                        completed: completed,\n\n                    }\n                }\n\n            }\n        }\n\n        case DELETE_TASK: {\n            const { task, category } = action.payload\n            console.log(\"inside DELETE_TASK task received\", task)\n            console.log(\"inside DELETE_TASK\", state[category])\n            const temp = state[category]\n            const newState = Object.keys(temp).reduce((object, input) => {\n                console.log(\"inside reduce\", temp[input].task)\n                if (temp[input].task !== task) {\n                    object[input] = temp[input]\n                }\n                return object\n            }, {})\n            console.log(newState)\n            return { ...state, [category]: newState }\n        }\n\n\n        default: return state\n    }\n\n}\n\n\n\nexport default reducer","import { createStore, applyMiddleware } from \"redux\"\nimport todoReducer from \"./reducers/todoReducer\"\nimport thunk from \"redux-thunk\"\nexport default createStore(todoReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}